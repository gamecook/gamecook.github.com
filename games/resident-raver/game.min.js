/*! Built with IMPACT - impactjs.com */

Number.prototype.map=function(istart,istop,ostart,ostop){return ostart+(ostop-ostart)*((this-istart)/(istop-istart));};Number.prototype.limit=function(min,max){return Math.min(max,Math.max(min,this));};Number.prototype.round=function(precision){precision=Math.pow(10,precision||0);return Math.round(this*precision)/precision;};Number.prototype.floor=function(){return Math.floor(this);};Number.prototype.ceil=function(){return Math.ceil(this);};Number.prototype.toInt=function(){return(this|0);};Number.prototype.toRad=function(){return(this/180)*Math.PI;};Number.prototype.toDeg=function(){return(this*180)/Math.PI;};Array.prototype.erase=function(item){for(var i=this.length;i--;){if(this[i]===item){this.splice(i,1);}}
return this;};Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)];};Function.prototype.bind=function(bind){var self=this;return function(){var args=Array.prototype.slice.call(arguments);return self.apply(bind||null,args);};};(function(window){window.ig={game:null,debug:null,version:'1.19',global:window,modules:{},resources:[],ready:false,baked:false,nocache:'',ua:{},lib:'lib/',_current:null,_loadQueue:[],_waitForOnload:0,$:function(selector){return selector.charAt(0)=='#'?document.getElementById(selector.substr(1)):document.getElementsByTagName(selector);},$new:function(name){return document.createElement(name);},copy:function(object){if(!object||typeof(object)!='object'||object instanceof HTMLElement||object instanceof ig.Class){return object;}
else if(object instanceof Array){var c=[];for(var i=0,l=object.length;i<l;i++){c[i]=ig.copy(object[i]);}
return c;}
else{var c={};for(var i in object){c[i]=ig.copy(object[i]);}
return c;}},merge:function(original,extended){for(var key in extended){var ext=extended[key];if(typeof(ext)!='object'||ext instanceof HTMLElement||ext instanceof ig.Class){original[key]=ext;}
else{if(!original[key]||typeof(original[key])!='object'){original[key]=(ext instanceof Array)?[]:{};}
ig.merge(original[key],ext);}}
return original;},ksort:function(obj){if(!obj||typeof(obj)!='object'){return[];}
var keys=[],values=[];for(var i in obj){keys.push(i);}
keys.sort();for(var i=0;i<keys.length;i++){values.push(obj[keys[i]]);}
return values;},module:function(name){if(ig._current){throw("Module '"+ig._current.name+"' defines nothing");}
if(ig.modules[name]&&ig.modules[name].body){throw("Module '"+name+"' is already defined");}
ig._current={name:name,requires:[],loaded:false,body:null};ig.modules[name]=ig._current;ig._loadQueue.push(ig._current);ig._initDOMReady();return ig;},requires:function(){ig._current.requires=Array.prototype.slice.call(arguments);return ig;},defines:function(body){name=ig._current.name;ig._current.body=body;ig._current=null;ig._execModules();},addResource:function(resource){ig.resources.push(resource);},setNocache:function(set){ig.nocache=set?'?'+Date.now():'';},log:function(){},show:function(name,number){},mark:function(msg,color){},_loadScript:function(name,requiredFrom){ig.modules[name]={name:name,requires:[],loaded:false,body:null};ig._waitForOnload++;var path=ig.lib+name.replace(/\./g,'/')+'.js'+ig.nocache;var script=ig.$new('script');script.type='text/javascript';script.src=path;script.onload=function(){ig._waitForOnload--;ig._execModules();};script.onerror=function(){throw('Failed to load module '+name+' at '+path+' '+'required from '+requiredFrom);};ig.$('head')[0].appendChild(script);},_execModules:function(){var modulesLoaded=false;for(var i=0;i<ig._loadQueue.length;i++){var m=ig._loadQueue[i];var dependenciesLoaded=true;for(var j=0;j<m.requires.length;j++){var name=m.requires[j];if(!ig.modules[name]){dependenciesLoaded=false;ig._loadScript(name,m.name);}
else if(!ig.modules[name].loaded){dependenciesLoaded=false;}}
if(dependenciesLoaded&&m.body){ig._loadQueue.splice(i,1);m.loaded=true;m.body();modulesLoaded=true;i--;}}
if(modulesLoaded){ig._execModules();}
else if(!ig.baked&&ig._waitForOnload==0&&ig._loadQueue.length!=0){var unresolved=[];for(var i=0;i<ig._loadQueue.length;i++){var unloaded=[];var requires=ig._loadQueue[i].requires;for(var j=0;j<requires.length;j++){var m=ig.modules[requires[j]];if(!m||!m.loaded){unloaded.push(requires[j]);}}
unresolved.push(ig._loadQueue[i].name+' (requires: '+unloaded.join(', ')+')');}
throw('Unresolved (circular?) dependencies. '+"Most likely there's a name/path mismatch for one of the listed modules:\n"+
unresolved.join('\n'));}},_DOMReady:function(){if(!ig.modules['dom.ready'].loaded){if(!document.body){return setTimeout(ig._DOMReady,13);}
ig.modules['dom.ready'].loaded=true;ig._waitForOnload--;ig._execModules();}
return 0;},_boot:function(){if(document.location.href.match(/\?nocache/)){ig.setNocache(true);}
ig.ua.pixelRatio=window.devicePixelRatio||1;ig.ua.viewport={width:window.innerWidth,height:window.innerHeight};ig.ua.screen={width:window.screen.availWidth*ig.ua.pixelRatio,height:window.screen.availHeight*ig.ua.pixelRatio};ig.ua.iPhone=/iPhone/i.test(navigator.userAgent);ig.ua.iPhone4=(ig.ua.iPhone&&ig.ua.pixelRatio==2);ig.ua.iPad=/iPad/i.test(navigator.userAgent);ig.ua.android=/android/i.test(navigator.userAgent);ig.ua.iOS=ig.ua.iPhone||ig.ua.iPad;ig.ua.mobile=ig.ua.iOS||ig.ua.android;},_initDOMReady:function(){if(ig.modules['dom.ready']){return;}
ig._boot();ig.modules['dom.ready']={requires:[],loaded:false,body:null};ig._waitForOnload++;if(document.readyState==='complete'){ig._DOMReady();}
else{document.addEventListener('DOMContentLoaded',ig._DOMReady,false);window.addEventListener('load',ig._DOMReady,false);}}};var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\bparent\b/:/.*/;window.ig.Class=function(){};var inject=function(prop){var proto=this.prototype;var parent={};for(var name in prop){if(typeof(prop[name])=="function"&&typeof(proto[name])=="function"&&fnTest.test(prop[name])){parent[name]=proto[name];proto[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{proto[name]=prop[name];}}};window.ig.Class.extend=function(prop){var parent=this.prototype;initializing=true;var prototype=new this();initializing=false;for(var name in prop){if(typeof(prop[name])=="function"&&typeof(parent[name])=="function"&&fnTest.test(prop[name])){prototype[name]=(function(name,fn){return function(){var tmp=this.parent;this.parent=parent[name];var ret=fn.apply(this,arguments);this.parent=tmp;return ret;};})(name,prop[name]);}
else{prototype[name]=prop[name];}}
function Class(){if(!initializing){if(this.staticInstantiate){var obj=this.staticInstantiate.apply(this,arguments);if(obj){return obj;}}
for(var p in this){if(typeof(this[p])=='object'){this[p]=ig.copy(this[p]);}}
if(this.init){this.init.apply(this,arguments);}}
return this;}
Class.prototype=prototype;Class.constructor=Class;Class.extend=arguments.callee;Class.inject=inject;return Class;};})(window);

// lib/impact/image.js
ig.baked=true;ig.module('impact.image').defines(function(){ig.Image=ig.Class.extend({data:null,width:0,height:0,loaded:false,failed:false,loadCallback:null,path:'',staticInstantiate:function(path){return ig.Image.cache[path]||null;},init:function(path){this.path=path;this.load();},load:function(loadCallback){if(this.loaded){if(loadCallback){loadCallback(this.path,true);}
return;}
else if(!this.loaded&&ig.ready){this.loadCallback=loadCallback||null;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.onerror=this.onerror.bind(this);this.data.src=this.path+ig.nocache;}
else{ig.addResource(this);}
ig.Image.cache[this.path]=this;},reload:function(){this.loaded=false;this.data=new Image();this.data.onload=this.onload.bind(this);this.data.src=this.path+'?'+Date.now();},onload:function(event){this.width=this.data.width;this.height=this.data.height;if(ig.system.scale!=1){this.resize(ig.system.scale);}
this.loaded=true;if(this.loadCallback){this.loadCallback(this.path,true);}},onerror:function(event){this.failed=true;if(this.loadCallback){this.loadCallback(this.path,false);}},resize:function(scale){var widthScaled=this.width*scale;var heightScaled=this.height*scale;var orig=ig.$new('canvas');orig.width=this.width;orig.height=this.height;var origCtx=orig.getContext('2d');origCtx.drawImage(this.data,0,0,this.width,this.height,0,0,this.width,this.height);var origPixels=origCtx.getImageData(0,0,this.width,this.height);var scaled=ig.$new('canvas');scaled.width=widthScaled;scaled.height=heightScaled;var scaledCtx=scaled.getContext('2d');var scaledPixels=scaledCtx.getImageData(0,0,widthScaled,heightScaled);for(var y=0;y<heightScaled;y++){for(var x=0;x<widthScaled;x++){var index=(Math.floor(y/scale)*this.width+Math.floor(x/scale))*4;var indexScaled=(y*widthScaled+x)*4;scaledPixels.data[indexScaled]=origPixels.data[index];scaledPixels.data[indexScaled+1]=origPixels.data[index+1];scaledPixels.data[indexScaled+2]=origPixels.data[index+2];scaledPixels.data[indexScaled+3]=origPixels.data[index+3];}}
scaledCtx.putImageData(scaledPixels,0,0);this.data=scaled;},draw:function(targetX,targetY,sourceX,sourceY,width,height){if(!this.loaded){return;}
var scale=ig.system.scale;sourceX=sourceX?sourceX*scale:0;sourceY=sourceY?sourceY*scale:0;width=(width?width:this.width)*scale;height=(height?height:this.height)*scale;ig.system.context.drawImage(this.data,sourceX,sourceY,width,height,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),width,height);ig.Image.drawCount++;},drawTile:function(targetX,targetY,tile,tileWidth,tileHeight,flipX,flipY){tileHeight=tileHeight?tileHeight:tileWidth;if(!this.loaded||tileWidth>this.width||tileHeight>this.height){return;}
var scale=ig.system.scale;var tileWidthScaled=tileWidth*scale;var tileHeightScaled=tileHeight*scale;var scaleX=flipX?-1:1;var scaleY=flipY?-1:1;if(flipX||flipY){ig.system.context.save();ig.system.context.scale(scaleX,scaleY);}
ig.system.context.drawImage(this.data,(Math.floor(tile*tileWidth)%this.width)*scale,(Math.floor(tile*tileWidth/this.width)*tileHeight)*scale,tileWidthScaled,tileHeightScaled,ig.system.getDrawPos(targetX)*scaleX-(flipX?tileWidthScaled:0),ig.system.getDrawPos(targetY)*scaleY-(flipY?tileHeightScaled:0),tileWidthScaled,tileHeightScaled);if(flipX||flipY){ig.system.context.restore();}
ig.Image.drawCount++;}});ig.Image.drawCount=0;ig.Image.cache={};ig.Image.reloadCache=function(){for(path in ig.Image.cache){ig.Image.cache[path].reload();}};});

// lib/impact/font.js
ig.baked=true;ig.module('impact.font').requires('impact.image').defines(function(){ig.Font=ig.Image.extend({widthMap:[],indices:[],firstChar:32,height:0,onload:function(ev){this._loadMetrics(this.data);this.parent(ev);},widthForString:function(s){var width=0;for(var i=0;i<s.length;i++){width+=this.widthMap[s.charCodeAt(i)-this.firstChar]+1;}
return width;},draw:function(text,x,y,align){if(typeof(text)!='string'){text=text.toString();}
if(text.indexOf('\n')!==-1){var lines=text.split('\n');for(i=0;i<lines.length;i++){this.draw(lines[i],x,y+i*this.height,align);}
return;}
if(align==ig.Font.ALIGN.RIGHT||align==ig.Font.ALIGN.CENTER){var width=0;for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);width+=this.widthMap[c-this.firstChar]+1;}
x-=align==ig.Font.ALIGN.CENTER?width/2:width;}
for(var i=0;i<text.length;i++){var c=text.charCodeAt(i);x+=this._drawChar(c-this.firstChar,x,y);}
ig.Image.drawCount+=text.length;},_drawChar:function(c,targetX,targetY){if(!this.loaded||c<0||c>=this.indices.length){return 0;}
var scale=ig.system.scale;var charX=this.indices[c]*scale;var charY=0;var charWidth=this.widthMap[c]*scale;var charHeight=(this.height-2)*scale;ig.system.context.drawImage(this.data,charX,charY,charWidth,charHeight,ig.system.getDrawPos(targetX),ig.system.getDrawPos(targetY),charWidth,charHeight);return this.widthMap[c]+1;},_loadMetrics:function(image){this.height=image.height-1;this.widthMap=[];this.indices=[];var canvas=ig.$new('canvas');canvas.width=image.width;canvas.height=image.height;var ctx=canvas.getContext('2d');ctx.drawImage(image,0,0);var px=ctx.getImageData(0,image.height-1,image.width,1);var currentChar=0;var currentWidth=0;for(var x=0;x<image.width;x++){var index=x*4+3;if(px.data[index]!=0){currentWidth++;}
else if(px.data[index]==0&&currentWidth){this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);currentChar++;currentWidth=0;}}
this.widthMap.push(currentWidth);this.indices.push(x-currentWidth);}});ig.Font.ALIGN={LEFT:0,RIGHT:1,CENTER:2};});

// lib/impact/sound.js
ig.baked=true;ig.module('impact.sound').defines(function(){ig.SoundManager=ig.Class.extend({clips:{},volume:1,format:null,init:function(){var probe=new Audio();for(var i=0;i<ig.Sound.use.length;i++){var format=ig.Sound.use[i];if(probe.canPlayType(format.mime)){this.format=format;break;}}
if(!this.format){ig.Sound.enabled=false;}},load:function(path,multiChannel,loadCallback){var realPath=path.match(/^(.*)\.[^\.]+$/)[1]+'.'+this.format.ext+ig.nocache;if(this.clips[path]){if(multiChannel&&this.clips[path].length<ig.Sound.channels){for(var i=this.clips[path].length;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return this.clips[path][0];}
var clip=new Audio(realPath);if(loadCallback){clip.addEventListener('canplaythrough',function(ev){this.removeEventListener('canplaythrough',arguments.callee,false);loadCallback(path,true,ev);},false);clip.addEventListener('error',function(ev){loadCallback(path,true,ev);},false);}
clip.load();this.clips[path]=[clip];if(multiChannel){for(var i=1;i<ig.Sound.channels;i++){var a=new Audio(realPath);a.load();this.clips[path].push(a);}}
return clip;},get:function(path){var channels=this.clips[path];for(var i=0,clip;clip=channels[i++];){if(clip.paused||clip.ended){if(clip.ended){clip.currentTime=0;}
return clip;}}
channels[0].pause();channels[0].currentTime=0;return channels[0];}});ig.Music=ig.Class.extend({tracks:[],namedTracks:{},currentTrack:null,currentIndex:0,random:false,_volume:1,_loop:false,_fadeInterval:0,_fadeTimer:null,_endedCallbackBound:null,init:function(){this._endedCallbackBound=this._endedCallback.bind(this);if(Object.defineProperty){Object.defineProperty(this,"volume",{get:this.getVolume.bind(this),set:this.setVolume.bind(this)});Object.defineProperty(this,"loop",{get:this.getLooping.bind(this),set:this.setLooping.bind(this)});}
else if(this.__defineGetter__){this.__defineGetter__('volume',this.getVolume.bind(this));this.__defineSetter__('volume',this.setVolume.bind(this));this.__defineGetter__('loop',this.getLooping.bind(this));this.__defineSetter__('loop',this.setLooping.bind(this));}},add:function(music,name){if(!ig.Sound.enabled){return;}
var path=music instanceof ig.Sound?music.path:music;var track=ig.soundManager.load(path,false);track.loop=this._loop;track.volume=this._volume;track.addEventListener('ended',this._endedCallbackBound,false);this.tracks.push(track);if(name){this.namedTracks[name]=track;}
if(!this.currentTrack){this.currentTrack=track;}},next:function(){if(!this.tracks.length){return;}
this.stop();this.currentIndex=this.random?Math.floor(Math.random()*this.tracks.length):(this.currentIndex+1)%this.tracks.length;this.currentTrack=this.tracks[this.currentIndex];this.play();},pause:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();},stop:function(){if(!this.currentTrack){return;}
this.currentTrack.pause();this.currentTrack.currentTime=0;},play:function(name){if(name&&this.namedTracks[name]){var newTrack=this.namedTracks[name];if(newTrack!=this.currentTrack){this.stop();this.currentTrack=newTrack;}}
else if(!this.currentTrack){return;}
this.currentTrack.play();},getLooping:function(){return this._loop;},setLooping:function(l){this._loop=l;for(var i in this.tracks){this.tracks[i].loop=l;}},getVolume:function(){return this._volume;},setVolume:function(v){this._volume=v.limit(0,1);for(var i in this.tracks){this.tracks[i].volume=this._volume;}},fadeOut:function(time){if(!this.currentTrack){return;}
clearInterval(this._fadeInterval);this.fadeTimer=new ig.Timer(time);this._fadeInterval=setInterval(this._fadeStep.bind(this),50);},_fadeStep:function(){var v=this.fadeTimer.delta().map(-this.fadeTimer.target,0,1,0).limit(0,1)*this._volume;if(v<=0.01){this.stop();this.currentTrack.volume=this._volume;clearInterval(this._fadeInterval);}
else{this.currentTrack.volume=v;}},_endedCallback:function(){if(this._loop){this.play();}
else{this.next();}}});ig.Sound=ig.Class.extend({path:'',volume:1,currentClip:null,multiChannel:true,init:function(path,multiChannel){this.path=path;this.multiChannel=(multiChannel!==false);this.load();},load:function(loadCallback){if(!ig.Sound.enabled){if(loadCallback){loadCallback(this.path,true);}
return;}
if(ig.ready){ig.soundManager.load(this.path,this.multiChannel,loadCallback);}
else{ig.addResource(this);}},play:function(){if(!ig.Sound.enabled){return;}
this.currentClip=ig.soundManager.get(this.path);this.currentClip.volume=ig.soundManager.volume*this.volume;this.currentClip.play();},stop:function(){if(this.currentClip){this.currentClip.pause();this.currentClip.currentTime=0;}}});ig.Sound.FORMAT={MP3:{ext:'mp3',mime:'audio/mpeg'},M4A:{ext:'m4a',mime:'audio/mp4; codecs=mp4a'},OGG:{ext:'ogg',mime:'audio/ogg; codecs=vorbis'},WEBM:{ext:'webm',mime:'audio/webm; codecs=vorbis'},CAF:{ext:'caf',mime:'audio/x-caf'}};ig.Sound.use=[ig.Sound.FORMAT.OGG,ig.Sound.FORMAT.MP3];ig.Sound.channels=4;ig.Sound.enabled=true;});

// lib/impact/loader.js
ig.baked=true;ig.module('impact.loader').requires('impact.image','impact.font','impact.sound').defines(function(){ig.Loader=ig.Class.extend({resources:[],gameClass:null,status:0,done:false,_unloaded:[],_drawStatus:0,_intervalId:0,_loadCallbackBound:null,init:function(gameClass,resources){this.gameClass=gameClass;this.resources=resources;this._loadCallbackBound=this._loadCallback.bind(this);for(var i=0;i<this.resources.length;i++){this._unloaded.push(this.resources[i].path);}},load:function(){ig.system.clear('#000');if(!this.resources.length){this.end();return;}
for(var i=0;i<this.resources.length;i++){this.loadResource(this.resources[i]);}
this._intervalId=setInterval(this.draw.bind(this),16);},loadResource:function(res){res.load(this._loadCallbackBound);},end:function(){if(this.done){return;}
this.done=true;clearInterval(this._intervalId);ig.system.setGame(this.gameClass);},draw:function(){this._drawStatus+=(this.status-this._drawStatus)/5;var s=ig.system.scale;var w=ig.system.width*0.6;var h=ig.system.height*0.1;var x=ig.system.width*0.5-w/2;var y=ig.system.height*0.5-h/2;ig.system.context.fillStyle='#000';ig.system.context.fillRect(0,0,480,320);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s,h*s);ig.system.context.fillStyle='#000';ig.system.context.fillRect(x*s+s,y*s+s,w*s-s-s,h*s-s-s);ig.system.context.fillStyle='#fff';ig.system.context.fillRect(x*s,y*s,w*s*this._drawStatus,h*s);},_loadCallback:function(path,status){if(status){this._unloaded.erase(path);}
else{throw('Failed to load resource: '+path);}
this.status=1-(this._unloaded.length/this.resources.length);if(this._unloaded.length==0){setTimeout(this.end.bind(this),250);}}});});

// lib/impact/timer.js
ig.baked=true;ig.module('impact.timer').defines(function(){ig.Timer=ig.Class.extend({target:0,base:0,last:0,init:function(seconds){this.base=ig.Timer.time;this.last=ig.Timer.time;this.target=seconds||0;},set:function(seconds){this.target=seconds||0;this.base=ig.Timer.time;},reset:function(){this.base=ig.Timer.time;},tick:function(){var delta=ig.Timer.time-this.last;this.last=ig.Timer.time;return delta;},delta:function(){return ig.Timer.time-this.base-this.target;}});ig.Timer._last=0;ig.Timer.time=0;ig.Timer.timeScale=1;ig.Timer.maxStep=0.05;ig.Timer.step=function(){var current=Date.now();var delta=(current-ig.Timer._last)/1000;ig.Timer.time+=Math.min(delta,ig.Timer.maxStep)*ig.Timer.timeScale;ig.Timer._last=current;};});

// lib/impact/system.js
ig.baked=true;ig.module('impact.system').requires('impact.timer','impact.image').defines(function(){ig.System=ig.Class.extend({fps:30,width:320,height:240,realWidth:320,realHeight:240,scale:1,tick:0,intervalId:0,newGameClass:null,running:false,delegate:null,clock:null,canvas:null,context:null,smoothPositioning:true,init:function(canvasId,fps,width,height,scale){this.fps=fps;this.clock=new ig.Timer();this.canvas=ig.$(canvasId);this.resize(width,height,scale);this.context=this.canvas.getContext('2d');},resize:function(width,height,scale){this.width=width;this.height=height;this.scale=scale||this.scale;this.realWidth=this.width*this.scale;this.realHeight=this.height*this.scale;this.canvas.width=this.realWidth;this.canvas.height=this.realHeight;},setGame:function(gameClass){if(this.running){this.newGameClass=gameClass;}
else{this.setGameNow(gameClass);}},setGameNow:function(gameClass){ig.game=new(gameClass)();ig.system.setDelegate(ig.game);},setDelegate:function(object){if(typeof(object.run)=='function'){this.delegate=object;this.startRunLoop();}else{throw('System.setDelegate: No run() function in object');}},stopRunLoop:function(){clearInterval(this.intervalId);this.running=false;},startRunLoop:function(){this.stopRunLoop();this.intervalId=setInterval(this.run.bind(this),1000/this.fps);this.running=true;},clear:function(color){this.context.fillStyle=color;this.context.fillRect(0,0,this.realWidth,this.realHeight);},run:function(){ig.Timer.step();this.tick=this.clock.tick();this.delegate.run();ig.input.clearPressed();if(this.newGameClass){this.setGameNow(this.newGameClass);this.newGameClass=null;}},getDrawPos:function(p){return this.smoothPositioning?Math.round(p*this.scale):Math.round(p)*this.scale;}});});

// lib/impact/input.js
ig.baked=true;ig.module('impact.input').defines(function(){ig.KEY={'MOUSE1':-1,'MOUSE2':-3,'MWHEEL_UP':-4,'MWHEEL_DOWN':-5,'BACKSPACE':8,'TAB':9,'ENTER':13,'PAUSE':19,'CAPS':20,'ESC':27,'SPACE':32,'PAGE_UP':33,'PAGE_DOWN':34,'END':35,'HOME':36,'LEFT_ARROW':37,'UP_ARROW':38,'RIGHT_ARROW':39,'DOWN_ARROW':40,'INSERT':45,'DELETE':46,'_0':48,'_1':49,'_2':50,'_3':51,'_4':52,'_5':53,'_6':54,'_7':55,'_8':56,'_9':57,'A':65,'B':66,'C':67,'D':68,'E':69,'F':70,'G':71,'H':72,'I':73,'J':74,'K':75,'L':76,'M':77,'N':78,'O':79,'P':80,'Q':81,'R':82,'S':83,'T':84,'U':85,'V':86,'W':87,'X':88,'Y':89,'Z':90,'NUMPAD_0':96,'NUMPAD_1':97,'NUMPAD_2':98,'NUMPAD_3':99,'NUMPAD_4':100,'NUMPAD_5':101,'NUMPAD_6':102,'NUMPAD_7':103,'NUMPAD_8':104,'NUMPAD_9':105,'MULTIPLY':106,'ADD':107,'SUBSTRACT':109,'DECIMAL':110,'DIVIDE':111,'F1':112,'F2':113,'F3':114,'F4':115,'F5':116,'F6':117,'F7':118,'F8':119,'F9':120,'F10':121,'F11':122,'F12':123,'SHIFT':16,'CTRL':17,'ALT':18,'PLUS':187,'COMMA':188,'MINUS':189,'PERIOD':190};ig.Input=ig.Class.extend({bindings:{},actions:{},presses:{},locks:{},delayedKeyup:{},isUsingMouse:false,isUsingKeyboard:false,isUsingAccelerometer:false,mouse:{x:0,y:0},accel:{x:0,y:0,z:0},initMouse:function(){if(this.isUsingMouse){return;}
this.isUsingMouse=true;window.addEventListener('mousewheel',this.mousewheel.bind(this),false);ig.system.canvas.addEventListener('contextmenu',this.contextmenu.bind(this),false);ig.system.canvas.addEventListener('mousedown',this.keydown.bind(this),false);ig.system.canvas.addEventListener('mouseup',this.keyup.bind(this),false);ig.system.canvas.addEventListener('mousemove',this.mousemove.bind(this),false);ig.system.canvas.addEventListener('touchstart',this.keydown.bind(this),false);ig.system.canvas.addEventListener('touchend',this.keyup.bind(this),false);ig.system.canvas.addEventListener('touchmove',this.mousemove.bind(this),false);},initKeyboard:function(){if(this.isUsingKeyboard){return;}
this.isUsingKeyboard=true;window.addEventListener('keydown',this.keydown.bind(this),false);window.addEventListener('keyup',this.keyup.bind(this),false);},initAccelerometer:function(){if(this.isUsingAccelerometer){return;}
window.addEventListener('devicemotion',this.devicemotion.bind(this),false);},mousewheel:function(event){var code=event.wheel>0?ig.KEY.MWHEEL_UP:ig.KEY.MWHEEL_DOWN;var action=this.bindings[code];if(action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();this.delayedKeyup[action]=true;}},mousemove:function(event){var el=ig.system.canvas;var pos={left:0,top:0};while(el!=null){pos.left+=el.offsetLeft;pos.top+=el.offsetTop;el=el.offsetParent;}
var tx=event.pageX;var ty=event.pageY;if(event.touches){tx=event.touches[0].clientX;ty=event.touches[0].clientY;}
this.mouse.x=(tx-pos.left)/ig.system.scale;this.mouse.y=(ty-pos.top)/ig.system.scale;},contextmenu:function(event){if(this.bindings[ig.KEY.MOUSE2]){event.stopPropagation();event.preventDefault();}},keydown:function(event){if(event.target.type=='text'){return;}
var code=event.type=='keydown'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);if(event.type=='touchstart'||event.type=='mousedown'){this.mousemove(event);}
var action=this.bindings[code];if(action){this.actions[action]=true;if(!this.locks[action]){this.presses[action]=true;this.locks[action]=true;}
event.stopPropagation();event.preventDefault();}},keyup:function(event){if(event.target.type=='text'){return;}
var code=event.type=='keyup'?event.keyCode:(event.button==2?ig.KEY.MOUSE2:ig.KEY.MOUSE1);var action=this.bindings[code];if(action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();}},devicemotion:function(event){this.accel=event.accelerationIncludingGravity;},bind:function(key,action){if(key<0){this.initMouse();}
else if(key>0){this.initKeyboard();}
this.bindings[key]=action;},bindTouch:function(selector,action){var element=ig.$(selector);var that=this;element.addEventListener('touchstart',function(ev){that.touchStart(ev,action);},false);element.addEventListener('touchend',function(ev){that.touchEnd(ev,action);},false);},unbind:function(key){var action=this.bindings[key];this.delayedKeyup[action]=true;this.bindings[key]=null;},unbindAll:function(){this.bindings={};this.actions={};this.presses={};this.locks={};this.delayedKeyup={};},state:function(action){return this.actions[action];},pressed:function(action){return this.presses[action];},released:function(action){return this.delayedKeyup[action];},clearPressed:function(){for(var action in this.delayedKeyup){this.actions[action]=false;this.locks[action]=false;}
this.delayedKeyup={};this.presses={};},touchStart:function(event,action){this.actions[action]=true;this.presses[action]=true;event.stopPropagation();event.preventDefault();return false;},touchEnd:function(event,action){this.delayedKeyup[action]=true;event.stopPropagation();event.preventDefault();return false;}});});

// lib/impact/impact.js
ig.baked=true;ig.module('impact.impact').requires('dom.ready','impact.loader','impact.system','impact.input','impact.sound').defines(function(){ig.main=function(canvasId,gameClass,fps,width,height,scale,loaderClass){ig.system=new ig.System(canvasId,fps,width,height,scale||1);ig.input=new ig.Input();ig.soundManager=new ig.SoundManager();ig.music=new ig.Music();ig.ready=true;var loader=new(loaderClass||ig.Loader)(gameClass,ig.resources);loader.load();};});

// lib/impact/animation.js
ig.baked=true;ig.module('impact.animation').requires('impact.timer','impact.image').defines(function(){ig.AnimationSheet=ig.Class.extend({width:8,height:8,image:null,init:function(path,width,height){this.width=width;this.height=height;this.image=new ig.Image(path);}});ig.Animation=ig.Class.extend({sheet:null,timer:null,sequence:[],flip:{x:false,y:false},pivot:{x:0,y:0},frame:0,tile:0,loopCount:0,alpha:1,angle:0,init:function(sheet,frameTime,sequence,stop){this.sheet=sheet;this.pivot={x:sheet.width/2,y:sheet.height/2};this.timer=new ig.Timer();this.frameTime=frameTime;this.sequence=sequence;this.stop=!!stop;this.tile=this.sequence[0];},rewind:function(){this.timer.reset();this.loopCount=0;this.tile=this.sequence[0];return this;},gotoFrame:function(f){this.timer.set(this.frameTime*-f);this.update();},gotoRandomFrame:function(){this.gotoFrame(Math.floor(Math.random()*this.sequence.length))},update:function(){var frameTotal=Math.floor(this.timer.delta()/this.frameTime);this.loopCount=Math.floor(frameTotal/this.sequence.length);if(this.stop&&this.loopCount>0){this.frame=this.sequence.length-1;}
else{this.frame=frameTotal%this.sequence.length;}
this.tile=this.sequence[this.frame];},draw:function(targetX,targetY){var bbsize=Math.max(this.sheet.width,this.sheet.height);if(targetX>ig.system.width||targetY>ig.system.height||targetX+bbsize<0||targetY+bbsize<0){return;}
if(this.alpha!=1){ig.system.context.globalAlpha=this.alpha;}
if(this.angle==0){this.sheet.image.drawTile(targetX,targetY,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);}
else{ig.system.context.save();ig.system.context.translate(ig.system.getDrawPos(targetX+this.pivot.x),ig.system.getDrawPos(targetY+this.pivot.y));ig.system.context.rotate(this.angle);this.sheet.image.drawTile(-this.pivot.x,-this.pivot.y,this.tile,this.sheet.width,this.sheet.height,this.flip.x,this.flip.y);ig.system.context.restore();}
if(this.alpha!=1){ig.system.context.globalAlpha=1;}}});});

// lib/impact/entity.js
ig.baked=true;ig.module('impact.entity').requires('impact.animation','impact.impact').defines(function(){ig.Entity=ig.Class.extend({id:0,settings:{},size:{x:16,y:16},offset:{x:0,y:0},pos:{x:0,y:0},last:{x:0,y:0},vel:{x:0,y:0},accel:{x:0,y:0},friction:{x:0,y:0},maxVel:{x:100,y:100},zIndex:0,gravityFactor:1,standing:false,bounciness:0,minBounceVelocity:40,anims:{},animSheet:null,currentAnim:null,health:10,type:0,checkAgainst:0,collides:0,_killed:false,slopeStanding:{min:(44).toRad(),max:(136).toRad()},init:function(x,y,settings){this.id=++ig.Entity._lastId;this.pos.x=x;this.pos.y=y;ig.merge(this,settings);},addAnim:function(name,frameTime,sequence,stop){if(!this.animSheet){throw('No animSheet to add the animation '+name+' to.');}
var a=new ig.Animation(this.animSheet,frameTime,sequence,stop);this.anims[name]=a;if(!this.currentAnim){this.currentAnim=a;}
return a;},update:function(){this.last.x=this.pos.x;this.last.y=this.pos.y;this.vel.y+=ig.game.gravity*ig.system.tick*this.gravityFactor;this.vel.x=this.getNewVelocity(this.vel.x,this.accel.x,this.friction.x,this.maxVel.x);this.vel.y=this.getNewVelocity(this.vel.y,this.accel.y,this.friction.y,this.maxVel.y);var mx=this.vel.x*ig.system.tick;var my=this.vel.y*ig.system.tick;var res=ig.game.collisionMap.trace(this.pos.x,this.pos.y,mx,my,this.size.x,this.size.y);this.handleMovementTrace(res);if(this.currentAnim){this.currentAnim.update();}},getNewVelocity:function(vel,accel,friction,max){if(accel){return(vel+accel*ig.system.tick).limit(-max,max);}
else if(friction){var delta=friction*ig.system.tick;if(vel-delta>0){return vel-delta;}
else if(vel+delta<0){return vel+delta;}
else{return 0;}}
return vel.limit(-max,max);},handleMovementTrace:function(res){this.standing=false;if(res.collision.y){if(this.bounciness>0&&Math.abs(this.vel.y)>this.minBounceVelocity){this.vel.y*=-this.bounciness;}
else{if(this.vel.y>0){this.standing=true;}
this.vel.y=0;}}
if(res.collision.x){if(this.bounciness>0&&Math.abs(this.vel.x)>this.minBounceVelocity){this.vel.x*=-this.bounciness;}
else{this.vel.x=0;}}
if(res.collision.slope){var s=res.collision.slope;if(this.bounciness>0){var proj=this.vel.x*s.nx+this.vel.y*s.ny;this.vel.x-=s.nx*proj*2;this.vel.y-=s.ny*proj*2;this.vel.x*=this.bounciness;this.vel.y*=this.bounciness;}
else{var lengthSquared=s.x*s.x+s.y*s.y;var dot=(this.vel.x*s.x+this.vel.y*s.y)/lengthSquared;this.vel.x=s.x*dot;this.vel.y=s.y*dot;var angle=Math.atan2(s.x,s.y);if(angle>this.slopeStanding.min&&angle<this.slopeStanding.max){this.standing=true;}}}
this.pos=res.pos;},draw:function(){if(this.currentAnim){this.currentAnim.draw(this.pos.x-this.offset.x-ig.game._rscreen.x,this.pos.y-this.offset.y-ig.game._rscreen.y);}},kill:function(){ig.game.removeEntity(this);},receiveDamage:function(amount,from){this.health-=amount;if(this.health<=0){this.kill();}},touches:function(other){return!(this.pos.x>=other.pos.x+other.size.x||this.pos.x+this.size.x<=other.pos.x||this.pos.y>=other.pos.y+other.size.y||this.pos.y+this.size.y<=other.pos.y);},distanceTo:function(other){var xd=(this.pos.x+this.size.x/2)-(other.pos.x+other.size.x/2);var yd=(this.pos.y+this.size.y/2)-(other.pos.y+other.size.y/2);return Math.sqrt(xd*xd+yd*yd);},angleTo:function(other){return Math.atan2((other.pos.y+other.size.y/2)-(this.pos.y+this.size.y/2),(other.pos.x+other.size.x/2)-(this.pos.x+this.size.x/2));},check:function(other){},collideWith:function(other,axis){},ready:function(){}});ig.Entity._lastId=0;ig.Entity.COLLIDES={NEVER:0,LITE:1,PASSIVE:2,ACTIVE:4,FIXED:8};ig.Entity.TYPE={NONE:0,A:1,B:2,BOTH:3};ig.Entity.checkPair=function(a,b){if(a.checkAgainst&b.type){a.check(b);}
if(b.checkAgainst&a.type){b.check(a);}
if(a.collides&&b.collides&&a.collides+b.collides>ig.Entity.COLLIDES.ACTIVE){ig.Entity.solveCollision(a,b);}};ig.Entity.solveCollision=function(a,b){var weak=null;if(a.collides==ig.Entity.COLLIDES.LITE||b.collides==ig.Entity.COLLIDES.FIXED){weak=a;}
else if(b.collides==ig.Entity.COLLIDES.LITE||a.collides==ig.Entity.COLLIDES.FIXED){weak=b;}
if(a.last.x+a.size.x>b.last.x&&a.last.x<b.last.x+b.size.x){if(a.last.y<b.last.y){ig.Entity.seperateOnYAxis(a,b,weak);}
else{ig.Entity.seperateOnYAxis(b,a,weak);}
a.collideWith(b,'y');b.collideWith(a,'y');}
else if(a.last.y+a.size.y>b.last.y&&a.last.y<b.last.y+b.size.y){if(a.last.x<b.last.x){ig.Entity.seperateOnXAxis(a,b,weak);}
else{ig.Entity.seperateOnXAxis(b,a,weak);}
a.collideWith(b,'x');b.collideWith(a,'x');}};ig.Entity.seperateOnXAxis=function(left,right,weak){var nudge=(left.pos.x+left.size.x-right.pos.x);if(weak){var strong=left===weak?right:left;weak.vel.x=-weak.vel.x*weak.bounciness+strong.vel.x;var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,weak==left?-nudge:nudge,0,weak.size.x,weak.size.y);weak.pos.x=resWeak.pos.x;}
else{var v2=(left.vel.x-right.vel.x)/2;left.vel.x=-v2;right.vel.x=v2;var resLeft=ig.game.collisionMap.trace(left.pos.x,left.pos.y,-nudge/2,0,left.size.x,left.size.y);left.pos.x=Math.floor(resLeft.pos.x);var resRight=ig.game.collisionMap.trace(right.pos.x,right.pos.y,nudge/2,0,right.size.x,right.size.y);right.pos.x=Math.ceil(resRight.pos.x);}};ig.Entity.seperateOnYAxis=function(top,bottom,weak){var nudge=(top.pos.y+top.size.y-bottom.pos.y);if(weak){var strong=top===weak?bottom:top;weak.vel.y=-weak.vel.y*weak.bounciness+strong.vel.y;var nudgeX=0;if(weak==top&&Math.abs(weak.vel.y-strong.vel.y)<weak.minBounceVelocity){weak.standing=true;nudgeX=strong.vel.x*ig.system.tick;}
var resWeak=ig.game.collisionMap.trace(weak.pos.x,weak.pos.y,nudgeX,weak==top?-nudge:nudge,weak.size.x,weak.size.y);weak.pos.y=resWeak.pos.y;weak.pos.x=resWeak.pos.x;}
else if(ig.game.gravity&&(bottom.standing||top.vel.y>0)){var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,0,-(top.pos.y+top.size.y-bottom.pos.y),top.size.x,top.size.y);top.pos.y=resTop.pos.y;if(top.bounciness>0&&top.vel.y>top.minBounceVelocity){top.vel.y*=-top.bounciness;}
else{top.standing=true;top.vel.y=0;}}
else{var v2=(top.vel.y-bottom.vel.y)/2;top.vel.y=-v2;bottom.vel.y=v2;var nudgeX=bottom.vel.x*ig.system.tick;var resTop=ig.game.collisionMap.trace(top.pos.x,top.pos.y,nudgeX,-nudge/2,top.size.x,top.size.y);top.pos.y=resTop.pos.y;var resBottom=ig.game.collisionMap.trace(bottom.pos.x,bottom.pos.y,0,nudge/2,bottom.size.x,bottom.size.y);bottom.pos.y=resBottom.pos.y;}};});

// lib/impact/map.js
ig.baked=true;ig.module('impact.map').defines(function(){ig.Map=ig.Class.extend({tilesize:8,width:1,height:1,data:[[]],init:function(tilesize,data){this.tilesize=tilesize;this.data=data;this.height=data.length;this.width=data[0].length;},getTile:function(x,y){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){return this.data[ty][tx];}
else{return 0;}},setTile:function(x,y,tile){var tx=Math.floor(x/this.tilesize);var ty=Math.floor(y/this.tilesize);if((tx>=0&&tx<this.width)&&(ty>=0&&ty<this.height)){this.data[ty][tx]=tile;}}});});

// lib/impact/collision-map.js
ig.baked=true;ig.module('impact.collision-map').requires('impact.map').defines(function(){ig.CollisionMap=ig.Map.extend({init:function(tilesize,data,tiledef){this.parent(tilesize,data);this.tiledef=tiledef||ig.CollisionMap.defaultTileDef;},trace:function(x,y,vx,vy,objectWidth,objectHeight){var res={collision:{x:false,y:false,slope:false},pos:{x:x,y:y},tile:{x:0,y:0}};var steps=Math.ceil(Math.max(Math.abs(vx),Math.abs(vy))/this.tilesize);if(steps>1){var sx=vx/steps;var sy=vy/steps;for(var i=0;i<steps&&(sx||sy);i++){this._traceStep(res,x,y,sx,sy,objectWidth,objectHeight,vx,vy,i);x=res.pos.x;y=res.pos.y;if(res.collision.x){sx=0;vx=0;}
if(res.collision.y){sy=0;vy=0;}
if(res.collision.slope){break;}}}
else{this._traceStep(res,x,y,vx,vy,objectWidth,objectHeight,vx,vy,0);}
return res;},_traceStep:function(res,x,y,vx,vy,width,height,rvx,rvy,step){res.pos.x+=vx;res.pos.y+=vy;var t=0;if(vx){var pxOffsetX=(vx>0?width:0);var tileOffsetX=(vx<0?this.tilesize:0);var firstTileY=Math.max(Math.floor(y/this.tilesize),0);var lastTileY=Math.min(Math.ceil((y+height)/this.tilesize),this.height);var tileX=Math.floor((res.pos.x+pxOffsetX)/this.tilesize);var prevTileX=Math.floor((x+pxOffsetX)/this.tilesize);if(step>0||tileX==prevTileX||prevTileX<0||prevTileX>=this.width){prevTileX=-1;}
if(tileX>=0&&tileX<this.width){for(var tileY=firstTileY;tileY<lastTileY;tileY++){if(prevTileX!=-1){t=this.data[tileY][prevTileX];if(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,prevTileX,tileY)){break;}}
t=this.data[tileY][tileX];if(t==1||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&res.collision.slope){break;}
res.collision.x=true;res.tile.x=t;res.pos.x=tileX*this.tilesize-pxOffsetX+tileOffsetX;break;}}}}
if(vy){var pxOffsetY=(vy>0?height:0);var tileOffsetY=(vy<0?this.tilesize:0);var firstTileX=Math.max(Math.floor(res.pos.x/this.tilesize),0);var lastTileX=Math.min(Math.ceil((res.pos.x+width)/this.tilesize),this.width);var tileY=Math.floor((res.pos.y+pxOffsetY)/this.tilesize);var prevTileY=Math.floor((y+pxOffsetY)/this.tilesize);if(step>0||tileY==prevTileY||prevTileY<0||prevTileY>=this.height){prevTileY=-1;}
if(tileY>=0&&tileY<this.height){for(var tileX=firstTileX;tileX<lastTileX;tileX++){if(prevTileY!=-1){t=this.data[prevTileY][tileX];if(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,prevTileY)){break;}}
t=this.data[tileY][tileX];if(t==1||(t>1&&this._checkTileDef(res,t,x,y,rvx,rvy,width,height,tileX,tileY))){if(t>1&&res.collision.slope){break;}
res.collision.y=true;res.tile.y=t;res.pos.y=tileY*this.tilesize-pxOffsetY+tileOffsetY;break;}}}}},_checkTileDef:function(res,t,x,y,vx,vy,width,height,tileX,tileY){var def=this.tiledef[t];if(!def){return false;}
var lx=(tileX+def[0])*this.tilesize,ly=(tileY+def[1])*this.tilesize,lvx=(def[2]-def[0])*this.tilesize,lvy=(def[3]-def[1])*this.tilesize,solid=def[4];var tx=x+vx+(lvy<0?width:0)-lx,ty=y+vy+(lvx>0?height:0)-ly;if(lvx*ty-lvy*tx>0){if(vx*-lvy+vy*lvx<0){return solid;}
var length=Math.sqrt(lvx*lvx+lvy*lvy);var nx=lvy/length,ny=-lvx/length;var proj=tx*nx+ty*ny;var px=nx*proj,py=ny*proj;if(px*px+py*py>=vx*vx+vy*vy){return true;}
res.pos.x=x+vx-px;res.pos.y=y+vy-py;res.collision.slope={x:lvx,y:lvy,nx:nx,ny:ny};return true;}
return false;}});var H=1/2,N=1/3,M=2/3,SOLID=true,NON_SOLID=false;ig.CollisionMap.defaultTileDef={5:[0,1,1,M,SOLID],6:[0,M,1,N,SOLID],7:[0,N,1,0,SOLID],3:[0,1,1,H,SOLID],4:[0,H,1,0,SOLID],2:[0,1,1,0,SOLID],10:[H,1,1,0,SOLID],21:[0,1,H,0,SOLID],32:[M,1,1,0,SOLID],43:[N,1,M,0,SOLID],54:[0,1,N,0,SOLID],27:[0,0,1,N,SOLID],28:[0,N,1,M,SOLID],29:[0,M,1,1,SOLID],25:[0,0,1,H,SOLID],26:[0,H,1,1,SOLID],24:[0,0,1,1,SOLID],11:[0,0,H,1,SOLID],22:[H,0,1,1,SOLID],33:[0,0,N,1,SOLID],44:[N,0,M,1,SOLID],55:[M,0,1,1,SOLID],16:[1,N,0,0,SOLID],17:[1,M,0,N,SOLID],18:[1,1,0,M,SOLID],14:[1,H,0,0,SOLID],15:[1,1,0,H,SOLID],13:[1,1,0,0,SOLID],8:[H,1,0,0,SOLID],19:[1,1,H,0,SOLID],30:[N,1,0,0,SOLID],41:[M,1,N,0,SOLID],52:[1,1,M,0,SOLID],38:[1,M,0,1,SOLID],39:[1,N,0,M,SOLID],40:[1,0,0,N,SOLID],36:[1,H,0,1,SOLID],37:[1,0,0,H,SOLID],35:[1,0,0,1,SOLID],9:[1,0,H,1,SOLID],20:[H,0,0,1,SOLID],31:[1,0,M,1,SOLID],42:[M,0,N,1,SOLID],53:[N,0,0,1,SOLID],12:[0,0,1,0,NON_SOLID],23:[1,1,0,1,NON_SOLID],34:[1,0,1,1,NON_SOLID],45:[0,1,0,0,NON_SOLID]};ig.CollisionMap.staticNoCollision={trace:function(x,y,vx,vy){return{collision:{x:false,y:false,slope:false},pos:{x:x+vx,y:y+vy},tile:{x:0,y:0}};}};});

// lib/impact/background-map.js
ig.baked=true;ig.module('impact.background-map').requires('impact.map','impact.image').defines(function(){ig.BackgroundMap=ig.Map.extend({tiles:null,scroll:{x:0,y:0},distance:1,repeat:false,tilesetName:'',foreground:false,enabled:true,preRender:false,preRenderedChunks:null,chunkSize:512,debugChunks:false,anims:{},init:function(tilesize,data,tileset){this.parent(tilesize,data);this.setTileset(tileset);},setTileset:function(tileset){this.tilesetName=tileset instanceof ig.Image?tileset.path:tileset;this.tiles=new ig.Image(this.tilesetName);this.preRenderedChunks=null;},setScreenPos:function(x,y){this.scroll.x=x/this.distance;this.scroll.y=y/this.distance;},preRenderMapToChunks:function(){var totalWidth=this.width*this.tilesize*ig.system.scale,totalHeight=this.height*this.tilesize*ig.system.scale;var chunkCols=Math.ceil(totalWidth/this.chunkSize),chunkRows=Math.ceil(totalHeight/this.chunkSize);this.preRenderedChunks=[];for(var y=0;y<chunkRows;y++){this.preRenderedChunks[y]=[];for(var x=0;x<chunkCols;x++){var chunkWidth=(x==chunkCols-1)?totalWidth-x*this.chunkSize:this.chunkSize;var chunkHeight=(y==chunkRows-1)?totalHeight-y*this.chunkSize:this.chunkSize;this.preRenderedChunks[y][x]=this.preRenderChunk(x,y,chunkWidth,chunkHeight);}}},preRenderChunk:function(cx,cy,w,h){var tw=w/this.tilesize/ig.system.scale+1;th=h/this.tilesize/ig.system.scale+1;var nx=(cx*this.chunkSize/ig.system.scale)%this.tilesize,ny=(cy*this.chunkSize/ig.system.scale)%this.tilesize;var tx=Math.floor(cx*this.chunkSize/this.tilesize/ig.system.scale),ty=Math.floor(cy*this.chunkSize/this.tilesize/ig.system.scale);var chunk=ig.$new('canvas');chunk.width=w;chunk.height=h;var oldContext=ig.system.context;ig.system.context=chunk.getContext("2d");for(var x=0;x<tw;x++){for(var y=0;y<th;y++){if(x+tx<this.width&&y+ty<this.height){var tile=this.data[y+ty][x+tx];if(tile){this.tiles.drawTile(x*this.tilesize-nx,y*this.tilesize-ny,tile-1,this.tilesize);}}}}
ig.system.context=oldContext;return chunk;},draw:function(){if(!this.tiles.loaded||!this.enabled){return;}
if(this.preRender){this.drawPreRendered();}
else{this.drawTiled();}},drawPreRendered:function(){if(!this.preRenderedChunks){this.preRenderMapToChunks();}
var dx=ig.system.getDrawPos(this.scroll.x),dy=ig.system.getDrawPos(this.scroll.y);if(this.repeat){dx%=this.width*this.tilesize*ig.system.scale;dy%=this.height*this.tilesize*ig.system.scale;}
var minChunkX=Math.max(Math.floor(dx/this.chunkSize),0),minChunkY=Math.max(Math.floor(dy/this.chunkSize),0),maxChunkX=Math.ceil((dx+ig.system.realWidth)/this.chunkSize),maxChunkY=Math.ceil((dy+ig.system.realHeight)/this.chunkSize),maxRealChunkX=this.preRenderedChunks[0].length,maxRealChunkY=this.preRenderedChunks.length;if(!this.repeat){maxChunkX=Math.min(maxChunkX,maxRealChunkX);maxChunkY=Math.min(maxChunkY,maxRealChunkY);}
var nudgeY=0;for(var cy=minChunkY;cy<maxChunkY;cy++){var nudgeX=0;for(var cx=minChunkX;cx<maxChunkX;cx++){var chunk=this.preRenderedChunks[cy%maxRealChunkY][cx%maxRealChunkX];var x=-dx+cx*this.chunkSize-nudgeX;var y=-dy+cy*this.chunkSize-nudgeY;ig.system.context.drawImage(chunk,x,y);ig.Image.drawCount++;if(this.debugChunks){ig.system.context.strokeStyle='#f0f';ig.system.context.strokeRect(x,y,this.chunkSize,this.chunkSize);}
if(this.repeat&&chunk.width<this.chunkSize&&x+chunk.width<ig.system.realWidth){nudgeX=this.chunkSize-chunk.width;maxChunkX++;}}
if(this.repeat&&chunk.height<this.chunkSize&&y+chunk.height<ig.system.realHeight){nudgeY=this.chunkSize-chunk.height;maxChunkY++;}}},drawTiled:function(){var tile=0,anim=null,tileOffsetX=(this.scroll.x/this.tilesize).toInt(),tileOffsetY=(this.scroll.y/this.tilesize).toInt(),pxOffsetX=this.scroll.x%this.tilesize,pxOffsetY=this.scroll.y%this.tilesize,pxMinX=-pxOffsetX-this.tilesize,pxMinY=-pxOffsetY-this.tilesize,pxMaxX=ig.system.width+this.tilesize-pxOffsetX,pxMaxY=ig.system.height+this.tilesize-pxOffsetY;for(var mapY=-1,pxY=pxMinY;pxY<pxMaxY;mapY++,pxY+=this.tilesize){var tileY=mapY+tileOffsetY;if(tileY>=this.height||tileY<0){if(!this.repeat){continue;}
tileY=tileY>0?tileY%this.height:((tileY+1)%this.height)+this.height-1;}
for(var mapX=-1,pxX=pxMinX;pxX<pxMaxX;mapX++,pxX+=this.tilesize){var tileX=mapX+tileOffsetX;if(tileX>=this.width||tileX<0){if(!this.repeat){continue;}
tileX=tileX>0?tileX%this.width:((tileX+1)%this.width)+this.width-1;}
if((tile=this.data[tileY][tileX])){if((anim=this.anims[tile-1])){anim.draw(pxX,pxY);}
else{this.tiles.drawTile(pxX,pxY,tile-1,this.tilesize);}}}}}});});

// lib/impact/game.js
ig.baked=true;ig.module('impact.game').requires('impact.impact','impact.entity','impact.collision-map','impact.background-map').defines(function(){ig.Game=ig.Class.extend({clearColor:'#000000',gravity:0,screen:{x:0,y:0},_rscreen:{x:0,y:0},entities:[],namedEntities:{},collisionMap:ig.CollisionMap.staticNoCollision,backgroundMaps:[],backgroundAnims:{},autoSort:false,sortBy:null,cellSize:64,_deferredKill:[],_levelToLoad:null,_doSortEntities:false,staticInstantiate:function(){this.sortBy=ig.Game.SORT.Z_INDEX;ig.game=this;return null;},loadLevel:function(data){this.screen={x:0,y:0};this.entities=[];this.namedEntities={};for(var i=0;i<data.entities.length;i++){var ent=data.entities[i];this.spawnEntity(ent.type,ent.x,ent.y,ent.settings);}
this.sortEntities();this.collisionMap=ig.CollisionMap.staticNoCollision;this.backgroundMaps=[];for(var i=0;i<data.layer.length;i++){var ld=data.layer[i];if(ld.name=='collision'){this.collisionMap=new ig.CollisionMap(ld.tilesize,ld.data);}
else{var newMap=new ig.BackgroundMap(ld.tilesize,ld.data,ld.tilesetName);newMap.anims=this.backgroundAnims[ld.tilesetName]||{};newMap.repeat=ld.repeat;newMap.distance=ld.distance;newMap.foreground=!!ld.foreground;newMap.preRender=!!ld.preRender;this.backgroundMaps.push(newMap);}}
for(var i=0;i<this.entities.length;i++){this.entities[i].ready();}},loadLevelDeferred:function(data){this._levelToLoad=data;},getEntityByName:function(name){return this.namedEntities[name];},getEntitiesByType:function(type){var entityClass=typeof(type)==='string'?ig.global[type]:type;var a=[];for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(ent instanceof entityClass&&!ent._killed){a.push(ent);}}
return a;},spawnEntity:function(type,x,y,settings){var entityClass=typeof(type)==='string'?ig.global[type]:type;if(!entityClass){throw("Can't spawn entity of type "+type);}
var ent=new(entityClass)(x,y,settings||{});this.entities.push(ent);if(ent.name){this.namedEntities[ent.name]=ent;}
return ent;},sortEntities:function(){this.entities.sort(this.sortBy);},sortEntitiesDeferred:function(){this._doSortEntities=true;},removeEntity:function(ent){if(ent.name){delete this.namedEntities[ent.name];}
ent._killed=true;ent.checkAgainst=ig.Entity.TYPE.NONE;ent.collides=ig.Entity.COLLIDES.NEVER;this._deferredKill.push(ent);},run:function(){this.update();this.draw();},update:function(){if(this._levelToLoad){this.loadLevel(this._levelToLoad);this._levelToLoad=null;}
if(this._doSortEntities||this.autoSort){this.sortEntities();this._doSortEntities=false;}
this.updateEntities();this.checkEntities();for(var i=0;i<this._deferredKill.length;i++){this.entities.erase(this._deferredKill[i]);}
this._deferredKill=[];for(var tileset in this.backgroundAnims){var anims=this.backgroundAnims[tileset];for(var a in anims){anims[a].update();}}},updateEntities:function(){for(var i=0;i<this.entities.length;i++){var ent=this.entities[i];if(!ent._killed){ent.update();}}},draw:function(){if(this.clearColor){ig.system.clear(this.clearColor);}
this._rscreen.x=Math.round(this.screen.x*ig.system.scale)/ig.system.scale;this._rscreen.y=Math.round(this.screen.y*ig.system.scale)/ig.system.scale;var mapIndex;for(mapIndex=0;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];if(map.foreground){break;}
map.setScreenPos(this.screen.x,this.screen.y);map.draw();}
this.drawEntities();for(mapIndex;mapIndex<this.backgroundMaps.length;mapIndex++){var map=this.backgroundMaps[mapIndex];map.setScreenPos(this.screen.x,this.screen.y);map.draw();}},drawEntities:function(){for(var i=0;i<this.entities.length;i++){this.entities[i].draw();}},checkEntities:function(){var hash={};for(var e=0;e<this.entities.length;e++){var entity=this.entities[e];if(entity.type==ig.Entity.TYPE.NONE&&entity.checkAgainst==ig.Entity.TYPE.NONE&&entity.collides==ig.Entity.COLLIDES.NEVER){continue;}
var checked={},xmin=Math.floor(entity.pos.x/this.cellSize),ymin=Math.floor(entity.pos.y/this.cellSize),xmax=Math.floor((entity.pos.x+entity.size.x)/this.cellSize)+1,ymax=Math.floor((entity.pos.y+entity.size.y)/this.cellSize)+1;for(var x=xmin;x<xmax;x++){for(var y=ymin;y<ymax;y++){if(!hash[x]){hash[x]={};hash[x][y]=[entity];}
else if(!hash[x][y]){hash[x][y]=[entity];}
else{var cell=hash[x][y];for(var c=0;c<cell.length;c++){if(entity.touches(cell[c])&&!checked[cell[c].id]){checked[cell[c].id]=true;ig.Entity.checkPair(entity,cell[c]);}}
cell.push(entity);}}}}}});ig.Game.SORT={Z_INDEX:function(a,b){return a.zIndex-b.zIndex;},POS_X:function(a,b){return a.pos.x-b.pos.x;},POS_Y:function(a,b){return a.pos.y-b.pos.y;}};});

// lib/game/entities/player.js
ig.baked=true;ig.module('game.entities.player').requires('impact.entity','impact.sound').defines(function(){EntityPlayer=ig.Entity.extend({animSheet:new ig.AnimationSheet('media/player.png',16,16),size:{x:8,y:14},offset:{x:4,y:2},flip:false,maxVel:{x:100,y:150},friction:{x:600,y:0},accelGround:400,accelAir:200,jump:200,type:ig.Entity.TYPE.A,checkAgainst:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.PASSIVE,weapon:0,activeWeapon:"none",startPosition:null,invincible:false,invincibleDelay:2,instructionsTimer:null,emptySFX:new ig.Sound('media/sounds/Empty.*'),jumpSFX:new ig.Sound('media/sounds/Jump.*'),deathSFX:new ig.Sound('media/sounds/Death.*'),fallOutOfBoundsSFX:new ig.Sound('media/sounds/PlayerMonserFall.*'),powerUpSFX:new ig.Sound('media/sounds/Powerup.*'),powerUp2SFX:new ig.Sound('media/sounds/Powerup2.*'),shotPressed:false,fireDelay:null,fireRate:0,currentDoor:null,inDoor:false,init:function(x,y,settings){this.parent(x,y,settings);this.setupAnimation(this.weapon);this.startPosition={x:x,y:y};this.instructionsTimer=new ig.Timer();this.fireDelay=new ig.Timer();},setupAnimation:function(offset){offset=offset*10;this.addAnim('idle',1,[0+offset]);this.addAnim('run',.07,[0+offset,1+offset,2+offset,3+offset,4+offset,5+offset]);this.addAnim('jump',1,[9+offset]);this.addAnim('fall',0.4,[6+offset,7+offset]);},makeInvincible:function(){this.invincible=true;this.instructionsTimer.reset();},update:function(){if(!this.inDoor)
{var accel=this.standing?this.accelGround:this.accelAir;if(ig.input.state('left')){this.accel.x=-accel;this.flip=true;}else if(ig.input.state('right')){this.accel.x=accel;this.flip=false;}else{this.accel.x=0;}
if(this.standing&&ig.input.pressed('jump')){this.vel.y=-this.jump;this.jumpSFX.play();}
if(ig.input.pressed('shoot')){this.fireWeapon();}
if(this.shotPressed)
{if(this.fireDelay.delta()>this.fireRate){this.fireWeapon();this.fireDelay.reset();}}
if(ig.input.released('shoot'))
{this.shotPressed=false;}
if(this.vel.x!=0){this.currentAnim=this.anims.run;}else{this.currentAnim=this.anims.idle;}
this.currentAnim.flip.x=this.flip;if(this.instructionsTimer.delta()>this.invincibleDelay){this.invincible=false;this.currentAnim.alpha=1;}}
else
{this.currentAnim.alpha=0;}
if(ig.input.pressed('up')&&this.standing)
{if(this.currentDoor&&!this.inDoor)
{this.openDoor();}
else
{this.exitDoor();}}
this.parent();this.currentDoor=null;},atDoor:function(door)
{this.currentDoor=door;},openDoor:function()
{if(this.currentDoor)
{this.currentDoor.open(this);this.visible=false;this.inDoor=true;this.vel.x=this.vel.y=0;this.accel.x=this.accel.y=0;}},exitDoor:function()
{if(this.currentDoor)
{this.currentDoor.close();this.visible=true;this.inDoor=false;ig.game.stats.doors++;}},equip:function(id,hideMessage)
{var text="";if(this.weapon==id)
{ig.game.stats.ammo+=10;text="You Found More Ammo";}
else
{this.weapon=id;if(this.weapon!=0)
{this.powerUpSFX.play();ig.game.stats.ammo=10;switch(this.weapon){case(1):default:this.activeWeapon="EntityBullet";text="You Found A Gun!";break;case(2):this.activeWeapon="EntityShotgunShell";text="You Found A Shotgun!";break;case(3):this.activeWeapon="EntityMachineGun";text="You Found A Machine Gun!";break;case(4):this.activeWeapon="EntityGrenade";text="You Found Grenades!";break;case(5):this.activeWeapon="EntityMine";text="You Found Land Mines!";break;}}
else
{this.activeWeapon="none";text="You Are Out Of Ammo, Find A Door!";}
this.setupAnimation(this.weapon);}
if(!hideMessage&&text!="")
ig.game.displayInstructions(text);},fireWeapon:function(){if(this.activeWeapon=="none")
return;var entity=ig.game.spawnEntity(this.activeWeapon,this.pos.x,this.pos.y,{flip:this.flip});this.shotPressed=entity.automatic;this.fireRate=entity.automatic?entity.fireRate:0;var accel=this.standing?this.accelGround:this.accelAir;if(!this.flip){this.accel.x=-accel*entity.recoil;}else{this.accel.x=accel*entity.recoil;}
this.fireDelay.reset();ig.game.stats.ammo--;if(ig.game.stats.ammo<1)
{this.equip(0);this.emptySFX.play();}},kill:function(noAnimation){this.parent();ig.game.respawnPosition=this.startPosition;if(!noAnimation)
{ig.game.spawnEntity(EntityDeathExplosion,this.pos.x,this.pos.y,{callBack:this.onDeath});this.deathSFX.play();}
else
{this.onDeath();}},outOfBounds:function()
{ig.game.setDeathMessage("You Fell To Your Death");this.kill(true);this.fallOutOfBoundsSFX.play();},onDeath:function(){ig.game.gameOver();},receiveDamage:function(amount,from){if(this.invincible||this.inDoor)
return;ig.game.setDeathMessage("You Were Killed By A Raver Zombie.");this.parent(amount,from);},draw:function(){if(this.invincible)
this.currentAnim.alpha=this.instructionsTimer.delta()/this.invincibleDelay*1;this.parent();},collideWith:function(other,axis){if(other.collides==ig.Entity.COLLIDES.FIXED&&this.touches(other)){var overlap;var size;if(axis=='y'){size=this.size.y;if(this.pos.y<other.pos.y)overlap=this.pos.y+this.size.y-other.pos.y;else overlap=this.pos.y-(other.pos.y+other.size.y);}else{size=this.size.x;if(this.pos.x<other.pos.x)overlap=this.pos.x+this.size.x-other.pos.x;else overlap=this.pos.x-(other.pos.x+other.size.x);}
overlap=Math.abs(overlap);if(overlap>3){ig.game.setDeathMessage("You Were Crushed!");this.kill();}}}});EntityBullet=ig.Entity.extend({size:{x:5,y:3},animSheet:new ig.AnimationSheet('media/bullet.png',5,3),maxVel:{x:200,y:0},type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.PASSIVE,automatic:false,recoil:1,gunFireSFX:new ig.Sound('media/sounds/GunFire.*'),init:function(x,y,settings){this.parent(x+(settings.flip?-4:8),y+8,settings);this.vel.x=this.accel.x=(settings.flip?-this.maxVel.x:this.maxVel.x);this.addAnim('idle',0.2,[0]);this.gunFireSFX.play();},handleMovementTrace:function(res){this.parent(res);if(res.collision.x||res.collision.y){this.kill();}},check:function(other){other.receiveDamage(3,this);this.kill();}});EntityShotgunShell=ig.Entity.extend({size:{x:5,y:3},animSheet:new ig.AnimationSheet('media/bullet.png',5,3),maxVel:{x:200,y:0},type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.PASSIVE,automatic:false,recoil:3,distance:20,shotgunFireSFX:new ig.Sound('media/sounds/ShotgunFire.*'),init:function(x,y,settings){this.parent(x+(settings.flip?-4:8),y+8,settings);this.vel.x=this.accel.x=(settings.flip?-this.maxVel.x:this.maxVel.x);this.addAnim('idle',0.2,[0]);this.shotgunFireSFX.play();},handleMovementTrace:function(res){this.parent(res);if(res.collision.x||res.collision.y){this.kill();}},update:function()
{this.parent();this.distance--;if(this.distance<0)
{this.kill();}},check:function(other){other.receiveDamage(8,this);this.kill();}});EntityMachineGun=ig.Entity.extend({size:{x:5,y:3},animSheet:new ig.AnimationSheet('media/bullet.png',5,3),maxVel:{x:300,y:0},type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.PASSIVE,automatic:true,fireRate:.1,recoil:5,machineGunFireSFX:new ig.Sound('media/sounds/MachineGunFire.*'),init:function(x,y,settings){this.parent(x+(settings.flip?-4:8),y+6,settings);this.vel.x=this.accel.x=(settings.flip?-this.maxVel.x:this.maxVel.x);this.addAnim('idle',0.2,[0]);this.machineGunFireSFX.play();},handleMovementTrace:function(res){this.parent(res);if(res.collision.x||res.collision.y){this.kill();}},check:function(other){other.receiveDamage(3,this);this.kill();}});EntityGrenade=ig.Entity.extend({size:{x:4,y:4},offset:{x:2,y:2},animSheet:new ig.AnimationSheet('media/grenade.png',8,8),type:ig.Entity.TYPE.A,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.ACTIVE,maxVel:{x:200,y:200},bounciness:0.6,bounceCounter:0,automatic:false,recoil:0,blastRadius:30,granadeBounceSFX:new ig.Sound('media/sounds/GranedeBounce.*'),granadeExplodeSFX:new ig.Sound('media/sounds/GrenedeExplosion.*'),init:function(x,y,settings){this.parent(x+(settings.flip?-4:7),y,settings);this.vel.x=(settings.flip?-this.maxVel.x:this.maxVel.x);this.vel.y=-(50+(Math.random()*100));this.addAnim('idle',0.2,[0,1]);},handleMovementTrace:function(res){this.parent(res);if(res.collision.x||res.collision.y){this.bounce();}},check:function(other){this.bounce();},bounce:function()
{this.granadeBounceSFX.play();this.bounceCounter++;if(this.bounceCounter>3){this.kill();}},kill:function(){this.granadeExplodeSFX.play();var entity;var entities=ig.game.entities;for(var i=0;i<entities.length;i++)
{entity=entities[i];if(entity.type==ig.Entity.TYPE.B)
{var distance=this.distanceTo(entity);if(distance<this.blastRadius)
entity.receiveDamage(this.blastRadius-distance,this);}}
for(var i=0;i<20;i++)
ig.game.spawnEntity(EntityGrenadeParticle,this.pos.x,this.pos.y);this.parent();ig.game.shakeScreen();},outOfBounds:function()
{console.log("outOfBounds");this.kill(true);}});EntityDeathExplosion=ig.Entity.extend({delay:1,callBack:null,particles:25,init:function(x,y,settings){this.parent(x,y,settings);for(var i=0;i<this.particles;i++)
ig.game.spawnEntity(EntityDeathExplosionParticle,x,y,{colorOffset:settings.colorOffset?settings.colorOffset:0});this.idleTimer=new ig.Timer();},update:function(){if(this.idleTimer.delta()>this.delay){this.kill();if(this.callBack)
this.callBack();return;}}});EntityMine=ig.Entity.extend({size:{x:6,y:5},offset:{x:0,y:0},animSheet:new ig.AnimationSheet('media/mine.png',6,5),type:ig.Entity.TYPE.A,checkAgainst:ig.Entity.TYPE.B,collides:ig.Entity.COLLIDES.ACTIVE,maxVel:{x:50,y:100},bounciness:0,automatic:false,recoil:0,blastRadius:25,friction:{x:100,y:0},mineBeepSFX:new ig.Sound('media/sounds/MineBeep.*'),mineExplosionSFX:new ig.Sound('media/sounds/MineExplosion.*'),init:function(x,y,settings){this.parent(x+(settings.flip?-10:15),y,settings);this.vel.x=(settings.flip?-this.maxVel.x:this.maxVel.x);this.vel.y=-(50+(Math.random()*50));this.addAnim('idle',0.2,[0,1]);this.mineBeepSFX.play();},check:function(other){if(this.vel.x==0&&this.vel.y==0)
{other.receiveDamage(10,this);this.kill();}},kill:function(){var entity;var entities=ig.game.entities;for(var i=0;i<entities.length;i++)
{entity=entities[i];if(entity.type==ig.Entity.TYPE.B)
{var distance=this.distanceTo(entity);if(distance<this.blastRadius)
entity.receiveDamage(this.blastRadius-distance,this);}}
for(var i=0;i<20;i++)
ig.game.spawnEntity(EntityGrenadeParticle,this.pos.x,this.pos.y);this.parent();ig.game.shakeScreen();this.mineExplosionSFX.play();},outOfBounds:function()
{this.kill(true);}});EntityDeathExplosionParticle=ig.Entity.extend({size:{x:2,y:2},maxVel:{x:160,y:200},delay:2,fadetime:1,bounciness:0,vel:{x:100,y:30},friction:{x:100,y:0},collides:ig.Entity.COLLIDES.LITE,colorOffset:0,totalColors:7,animSheet:new ig.AnimationSheet('media/blood.png',2,2),init:function(x,y,settings){this.parent(x,y,settings);var frameID=Math.round(Math.random()*this.totalColors)+(this.colorOffset*(this.totalColors+1));this.addAnim('idle',0.2,[frameID]);this.vel.x=(Math.random()*2-1)*this.vel.x;this.vel.y=(Math.random()*2-1)*this.vel.y;this.idleTimer=new ig.Timer();},update:function(){if(this.idleTimer.delta()>this.delay){this.kill();return;}
this.currentAnim.alpha=this.idleTimer.delta().map(this.delay-this.fadetime,this.delay,1,0);this.parent();}});EntityGrenadeParticle=ig.Entity.extend({size:{x:1,y:1},maxVel:{x:160,y:200},delay:1,fadetime:1,bounciness:0.3,vel:{x:40,y:50},friction:{x:20,y:20},checkAgainst:ig.Entity.TYPE.B,collides:ig.Entity.COLLIDES.LITE,animSheet:new ig.AnimationSheet('media/explosion.png',1,1),init:function(x,y,settings){this.parent(x,y,settings);this.vel.x=(Math.random()*4-1)*this.vel.x;this.vel.y=(Math.random()*10-1)*this.vel.y;this.idleTimer=new ig.Timer();var frameID=Math.round(Math.random()*7);this.addAnim('idle',0.2,[frameID]);},update:function(){if(this.idleTimer.delta()>this.delay){this.kill();return;}
this.currentAnim.alpha=this.idleTimer.delta().map(this.delay-this.fadetime,this.delay,1,0);this.parent();}});});

// lib/game/entities/spawner.js
ig.baked=true;ig.module('game.entities.spawner').requires('impact.entity').defines(function(){EntitySpawner=ig.Entity.extend({idleTimer:null,_wmDrawBox:true,_wmBoxColor:'rgba(0, 0, 255, 0.7)',_wmScalable:true,delay:4,maxVel:{x:0,y:0},spawnEntity:null,target:null,targets:[],randomSpawnPoint:false,pool:0,maxPool:-1,init:function(x,y,settings){this.parent(x,y,settings);this.idleTimer=new ig.Timer();this.targets=ig.ksort(this.target);},update:function(){if(this.idleTimer.delta()>this.delay){this.idleTimer.reset();this.spawnNewEntity();}
this.parent();},spawnNewEntity:function(settings)
{if(this.pool<this.maxPool||this.maxPool==-1)
{if(!settings)settings={spawner:this};var x=this.pos.x;var y=this.pos.y;if(this.targets.length>0)
{var index=Math.floor(Math.random()*(this.targets.length-1));var newTarget=ig.game.getEntityByName(this.targets[index]);x=this.randomSpawnPoint?Math.round(Math.random()*newTarget.size.x)+newTarget.pos.x:newTarget.pos.x;y=newTarget.pos.y;}
if(this.spawnEntity)
ig.game.spawnEntity(this.spawnEntity,x,y,settings);ig.game.sortEntitiesDeferred();this.pool++;}},draw:function(){},removeItem:function()
{this.pool--;}});});

// lib/game/entities/powerupspawner.js
ig.baked=true;ig.module('game.entities.powerupspawner').requires('game.entities.spawner').defines(function(){EntityPowerupspawner=EntitySpawner.extend({powerUp:0,init:function(x,y,settings){this.parent(x,y,settings);this.idleTimer=new ig.Timer();},outOfBounds:function(){this.powerUp++;},spawnNewEntity:function()
{var settings={flip:Math.round(Math.random()),spawner:this};if(this.powerUp>0)
{settings.spriteOffset=1;settings.speed=28;this.powerUp--;if(this.powerUp<0)
this.powerUp=0;}
this.parent(settings);}});});

// lib/game/entities/void.js
ig.baked=true;ig.module('game.entities.void').requires('impact.entity').defines(function(){EntityVoid=ig.Entity.extend({_wmDrawBox:true,_wmBoxColor:'rgba(128, 28, 230, 0.7)',_wmScalable:true,size:{x:8,y:8},update:function(){}});});

// lib/game/entities/outofbounds.js
ig.baked=true;ig.module('game.entities.outofbounds').requires('impact.entity').defines(function(){EntityOutofbounds=ig.Entity.extend({size:{x:16,y:16},_wmScalable:true,_wmDrawBox:true,_wmBoxColor:'rgba(196, 255, 0, 0.7)',type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.NEVER,init:function(x,y,settings){if(settings.checks){this.checkAgainst=ig.Entity.TYPE[settings.checks.toUpperCase()]||ig.Entity.TYPE.A;delete settings.check;}
this.parent(x,y,settings);},check:function(other){if(other.outOfBounds)
other.outOfBounds();},update:function(){}});});

// lib/game/entities/elevator.js
ig.baked=true;ig.module('game.entities.elevator').requires('impact.entity','impact.sound').defines(function(){EntityMover=ig.Entity.extend({size:{x:24,y:8},maxVel:{x:100,y:100},type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.FIXED,target:null,targets:[],currentTarget:0,speed:20,gravityFactor:0,delay:1,delayTimer:null,angle:0,elevatorBeepSFX:new ig.Sound('media/sounds/ElvatorBeep.*'),init:function(x,y,settings){this.parent(x,y,settings);this.targets=ig.ksort(this.target);this.delayTimer=new ig.Timer();},update:function(){if(this.delayTimer.delta()>this.delay){var oldDistance=0;var target=ig.game.getEntityByName(this.targets[this.currentTarget]);if(target){oldDistance=this.distanceTo(target);this.angle=this.angleTo(target);this.vel.x=Math.cos(this.angle)*this.speed;this.vel.y=Math.sin(this.angle)*this.speed;}
else{this.vel.x=0;this.vel.y=0;}
this.parent();var newDistance=this.distanceTo(target);if(target&&(newDistance>oldDistance||newDistance<0.5)){this.angle=0;this.pos.x=target.pos.x+target.size.x/2-this.size.x/2;this.pos.y=target.pos.y+target.size.y/2-this.size.y/2;this.currentTarget++;if(this.currentTarget>=this.targets.length&&this.targets.length>1){this.currentTarget=1;this.targets.reverse();}
this.onReachTarget();}}},onReachTarget:function()
{this.vel.y=0;this.delayTimer.set(this.delay);},receiveDamage:function(amount,from){}});EntityElevator=EntityMover.extend({size:{x:32,y:48},type:ig.Entity.TYPE.NONE,collides:ig.Entity.COLLIDES.NONE,cord:null,cords:[],zIndex:-1,animSheet:new ig.AnimationSheet('media/elevator.png',32,48),init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[0]);this.addAnim('up',1,[1]);this.addAnim('down',1,[2]);this.cords=ig.ksort(this.cord);if(typeof wm=="undefined"){this.topEntity=ig.game.spawnEntity("EntityElevatorPlatform",this.pos.x,this.pos.y,{name:"top"});this.bottomEntity=ig.game.spawnEntity("EntityElevatorPlatform",this.pos.x,this.pos.y+this.size.y-8,{name:"bottom"});}},update:function(){this.parent();if(this.topEntity&&this.bottomEntity){this.topEntity.vel.y=this.vel.y;this.bottomEntity.vel.y=this.vel.y;}
if(this.angle<0)
this.currentAnim=this.anims.up;else if(this.angle>0)
this.currentAnim=this.anims.down;else
this.currentAnim=this.anims.idle;},onReachTarget:function()
{this.parent();if(this.topEntity&&this.bottomEntity){this.topEntity.pos.y=this.pos.y;this.bottomEntity.pos.y=this.pos.y+this.size.y-8;}
this.elevatorBeepSFX.play();},draw:function(){if(this.cords.length==2){for(var t in this.cords){this.drawLineToTarget(this,this.cords[t]);}}
this.parent();},drawLineToTarget:function(ent,target){target=ig.game.getEntityByName(target);if(!target){return;}
ig.system.context.strokeStyle='#000';ig.system.context.lineWidth=3;ig.system.context.beginPath();ig.system.context.moveTo(ig.system.getDrawPos(ent.pos.x+ent.size.x/2-ig.game.screen.x),ig.system.getDrawPos(ent.pos.y+ent.size.y/2-ig.game.screen.y));ig.system.context.lineTo(ig.system.getDrawPos(target.pos.x+target.size.x/2-ig.game.screen.x),ig.system.getDrawPos(target.pos.y+target.size.y/2-ig.game.screen.y));ig.system.context.stroke();ig.system.context.closePath();}});EntityElevatorPlatform=ig.Entity.extend({type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.BOTH,collides:ig.Entity.COLLIDES.FIXED,size:{x:32,y:8},speed:20,gravityFactor:0,maxVel:{x:100,y:100},debug:false,draw:function(){if(this.debug)
{this.parent();var ctx=ig.system.context;var s=ig.system.scale;var x=this.pos.x*s-ig.game.screen.x*s;var y=this.pos.y*s-ig.game.screen.y*s;var sizeX=this.size.x*s;var sizeY=this.size.y*s;ctx.save();ctx.fillStyle="rgba(128, 28, 230, 0.7)";ctx.fillRect(x,y,sizeX,sizeY);ctx.restore();}},receiveDamage:function(amount,from){}});});

// lib/game/levels/broward.js
ig.baked=true;ig.module('game.levels.broward').requires('impact.image','game.entities.player','game.entities.powerupspawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.elevator').defines(function(){LevelBroward={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityPowerupspawner","x":180,"y":-8,"settings":{"name":"zombies","size":{"x":24,"y":16},"spawnEntity":"EntityZombie","maxPool":30,"delay":6}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntityVoid","x":92,"y":12,"settings":{"name":"cord1","size":{"x":8,"y":8}}},{"type":"EntityVoid","x":92,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":156,"y":220,"settings":{"name":"cord4"}},{"type":"EntityVoid","x":156,"y":12,"settings":{"name":"cord3"}},{"type":"EntitySpawner","x":124,"y":-40,"settings":{"name":"weapons","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4"}}},{"type":"EntityVoid","x":48,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":48,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":192,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":192,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityPowerupspawner","x":52,"y":-8,"settings":{"name":"zombies","size":{"x":24,"y":16},"spawnEntity":"EntityZombie","maxPool":30,"delay":3}},{"type":"EntityOutofbounds","x":0,"y":244,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityVoid","x":80,"y":136,"settings":{"size":{"x":32,"y":48},"name":"floor1a"}},{"type":"EntityVoid","x":80,"y":72,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityVoid","x":144,"y":72,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityVoid","x":144,"y":136,"settings":{"size":{"x":32,"y":48},"name":"floor1b"}},{"type":"EntityElevator","x":80,"y":136,"settings":{"name":"elevatorA","target":{"1":"floor1a","2":"floor2a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityElevator","x":144,"y":72,"settings":{"name":"elevatorA_clone","target":{"1":"floor2b","2":"floor1b"},"cord":{"1":"cord3","2":"cord4"}}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,7,7,5,5,5,5,5,5,7,7,5,5,5],[5,8,8,7,7,8,8,8,8,8,8,7,7,8,8,5],[5,7,19,23,20,7,7,19,20,7,7,19,23,20,7,5],[5,7,26,26,26,7,7,26,26,7,7,26,26,26,7,5],[5,7,8,8,8,7,7,8,8,7,7,8,8,8,7,5],[5,7,7,12,7,7,7,7,7,7,7,7,12,7,7,5],[5,7,19,24,20,7,7,19,20,7,7,19,24,20,7,5],[5,7,26,26,26,7,7,26,26,7,7,26,26,26,7,5],[5,7,8,8,8,7,7,8,8,7,7,8,8,8,7,5],[5,7,7,12,7,7,7,7,7,7,7,7,12,7,7,5],[5,7,19,24,20,7,7,19,20,7,7,19,24,20,7,5],[5,7,26,26,26,7,7,14,14,7,7,26,26,26,7,5],[5,19,22,22,20,7,7,19,20,7,7,19,22,22,20,5],[5,14,14,14,14,7,7,30,30,7,7,14,14,14,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,23,23,1,1,1,1,1,1,23,23,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1]]}]};LevelBrowardResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/bryan.js
ig.baked=true;ig.module('game.levels.bryan').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner').defines(function(){LevelBryan={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":44,"y":244,"settings":{"size":{"x":172,"y":16}}},{"type":"EntityVoid","x":124,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":124,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":112,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":112,"y":136,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityPowerupspawner","x":120,"y":-4,"settings":{"size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":2,"maxPool":40,"name":"zombie"}},{"type":"EntityElevator","x":112,"y":136,"settings":{"target":{"1":"floor1","2":"floor2"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":48,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":80,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":160,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":192,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":80,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":160,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntitySpawner","x":120,"y":-40,"settings":{"name":"door","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"}}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5],[5,8,8,8,8,8,8,7,7,8,8,8,8,8,8,5],[5,7,26,26,26,26,26,26,26,26,26,26,26,26,7,5],[5,19,20,8,8,8,8,8,8,8,8,8,8,19,20,5],[5,26,26,7,7,12,7,7,7,7,12,7,7,26,26,5],[5,8,8,19,22,24,20,7,7,19,24,22,20,8,8,5],[5,7,7,26,26,26,26,7,7,26,26,26,26,7,7,5],[5,7,7,8,8,8,8,7,7,8,8,8,8,7,7,5],[5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5],[5,7,7,12,7,12,7,7,7,7,12,7,12,7,7,5],[5,7,19,24,22,24,20,7,7,19,24,22,24,20,7,5],[5,7,26,26,26,26,26,7,7,26,26,26,26,26,7,5],[5,19,22,22,22,22,22,7,7,22,22,22,22,22,20,5],[5,14,14,14,14,14,14,7,7,14,14,14,14,14,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,23,23,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,1,1,0,0,1,1,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1]]}]};LevelBryanResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/cawthon.js
ig.baked=true;ig.module('game.levels.cawthon').requires('impact.image','game.entities.player','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.powerupspawner','game.entities.outofbounds').defines(function(){LevelCawthon={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntitySpawner","x":120,"y":-28,"settings":{"name":"weapons","maxPool":1,"dealy":2,"spawnEntity":"EntityDoor","target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6","7":"door7"}}},{"type":"EntityVoid","x":112,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":160,"y":32,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":64,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":112,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":64,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":112,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":160,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door7"}},{"type":"EntityVoid","x":204,"y":12,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":204,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":192,"y":24,"settings":{"size":{"x":32,"y":48},"name":"floor3"}},{"type":"EntityVoid","x":192,"y":88,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":192,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityElevator","x":192,"y":128,"settings":{"target":{"1":"floor1","2":"floor2","3":"floor3"},"cord":{"1":"cord1","2":"cord"}}},{"type":"EntityPowerupspawner","x":36,"y":-4,"settings":{"size":{"x":24,"y":12},"name":"zombies","maxPool":40,"delay":2,"spawnEntity":"EntityZombie"}},{"type":"EntityOutofbounds","x":152,"y":244,"settings":{"size":{"x":104,"y":16}}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5],[5,8,7,7,8,8,8,8,8,8,8,8,8,8,8,5],[5,7,19,22,22,22,7,7,7,7,12,7,7,7,7,5],[5,7,26,26,26,26,7,12,7,19,24,20,7,7,19,5],[5,19,20,8,8,8,19,24,20,14,26,26,7,7,26,5],[5,26,26,7,12,7,26,26,26,30,8,8,7,7,8,5],[5,8,19,22,24,20,8,8,8,8,7,7,7,7,7,5],[5,7,26,26,26,26,7,12,7,19,22,20,7,7,19,5],[5,19,20,8,8,8,19,24,22,14,26,26,7,7,26,5],[5,26,26,7,12,7,26,26,26,30,8,8,7,7,8,5],[5,8,19,22,24,20,8,8,8,8,7,7,7,7,7,5],[5,7,26,26,26,26,7,12,7,7,12,7,7,7,7,5],[5,19,22,22,22,22,22,24,22,22,24,20,7,7,19,5],[5,14,14,14,14,14,14,14,14,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,23,23,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1],[1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1],[1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1]]}]};LevelCawthonResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/degraff.js
ig.baked=true;ig.module('game.levels.degraff').requires('impact.image','game.entities.player','game.entities.powerupspawner','game.entities.powerupspawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.elevator','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner').defines(function(){LevelDegraff={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityPowerupspawner","x":56,"y":-4,"settings":{"size":{"x":16,"y":12},"name":"zombies","spawnEntity":"EntityZombie","maxPool":30,"delay":4}},{"type":"EntityPowerupspawner","x":184,"y":-4,"settings":{"size":{"x":16,"y":12},"name":"zombies_clone","spawnEntity":"EntityZombie","maxPool":30,"delay":8}},{"type":"EntityVoid","x":60,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":60,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":188,"y":220,"settings":{"name":"cord4"}},{"type":"EntityVoid","x":188,"y":44,"settings":{"name":"cord3"}},{"type":"EntityVoid","x":48,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1a"}},{"type":"EntityVoid","x":48,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityVoid","x":48,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3a"}},{"type":"EntityVoid","x":176,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1b"}},{"type":"EntityVoid","x":176,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityVoid","x":176,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3b"}},{"type":"EntityElevator","x":48,"y":56,"settings":{"target":{"1":"floor3a","2":"floor2a","3":"floor1a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityElevator","x":176,"y":168,"settings":{"target":{"1":"floor1b","2":"floor2b","3":"floor3b"},"cord":{"1":"cord3","2":"cord4"}}},{"type":"EntityOutofbounds","x":0,"y":244,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityVoid","x":0,"y":-20,"settings":{"name":"settings"}},{"type":"EntityVoid","x":96,"y":64,"settings":{"name":"door1","size":{"x":16,"y":32}}},{"type":"EntityVoid","x":144,"y":64,"settings":{"name":"door2","size":{"x":16,"y":32}}},{"type":"EntityVoid","x":96,"y":128,"settings":{"name":"door3","size":{"x":16,"y":32}}},{"type":"EntityVoid","x":144,"y":128,"settings":{"name":"door4","size":{"x":16,"y":32}}},{"type":"EntitySpawner","x":124,"y":-32,"settings":{"name":"weapons","target":{"1":"door1","2":"door2","3":"door3","4":"door4"},"spawnEntity":"EntityDoor","maxPool":1,"delay":2}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,7,7,5,5,5,5,5,5,7,7,5,5,5],[5,19,22,22,20,7,19,22,22,20,7,19,22,22,20,5],[5,26,26,26,26,7,26,26,26,26,7,26,26,26,26,5],[5,8,8,8,8,7,8,8,8,8,7,8,8,8,8,5],[5,7,7,7,7,7,12,7,7,12,7,7,7,7,7,5],[5,19,20,7,7,19,24,22,22,24,20,7,7,19,20,5],[5,26,26,7,7,26,26,26,26,26,26,7,7,26,26,5],[5,8,8,7,7,8,8,8,8,8,8,7,7,8,8,5],[5,7,7,7,7,7,12,7,7,12,7,7,7,7,7,5],[5,19,20,7,7,19,24,22,22,24,20,7,7,19,20,5],[5,26,26,7,7,26,26,26,26,26,26,7,7,26,26,5],[5,8,8,7,7,8,8,8,8,8,8,7,7,8,8,5],[5,19,20,7,7,19,22,22,22,22,20,7,7,19,20,5],[5,14,14,7,7,14,14,14,14,14,14,7,7,14,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,23,23,1,1,1,1,1,1,23,23,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1]]}]};LevelDegraffResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/entities/crate.js
ig.baked=true;ig.module('game.entities.crate').requires('impact.entity','impact.sound').defines(function(){EntityCrate=ig.Entity.extend({animSheet:new ig.AnimationSheet('media/crate.png',10,10),size:{x:10,y:10},maxVel:{x:0,y:100},flip:false,friction:{x:0,y:0},type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.B,collides:ig.Entity.COLLIDES.ACTIVE,spawner:null,life:20,hitHardSFX:new ig.Sound('media/sounds/HitHard.*'),deathSFX:new ig.Sound('media/sounds/Death.*'),init:function(x,y,settings){this.parent(x,y,settings);this.spawner=settings.spawner;this.setupAnimation(settings.spriteOffset?settings.spriteOffset:0);},setupAnimation:function(offset){offset=0;this.addAnim('idle',.07,[0+offset]);},receiveDamage:function(value){this.parent(value);if(this.health>0){ig.game.spawnEntity(EntityDeathExplosion,this.pos.x,this.pos.y,{particles:2,colorOffset:3});this.hitHardSFX.play();}},kill:function(noAnimation){this.parent();ig.game.spawnEntity(EntityDeathExplosion,this.pos.x,this.pos.y,{colorOffset:3});this.deathSFX.play();},outOfBounds:function(){this.kill(true);},collideWith:function(other,axis){var overlap;var size;if(axis=='y'){size=this.size.y;if(this.pos.y<other.pos.y)overlap=this.pos.y+this.size.y-other.pos.y;else overlap=this.pos.y-(other.pos.y+other.size.y);}else{size=this.size.x;if(this.pos.x<other.pos.x)overlap=this.pos.x+this.size.x-other.pos.x;else overlap=this.pos.x-(other.pos.x+other.size.x);if((other.type==ig.Entity.TYPE.B)){other.flip=!other.flip;this.receiveDamage(1,other);}}
if(other.collides==ig.Entity.COLLIDES.FIXED&&this.touches(other)){overlap=Math.abs(overlap);if(overlap>=2){this.kill();}}}});});

// lib/game/levels/deviney.js
ig.baked=true;ig.module('game.levels.deviney').requires('impact.image','game.entities.player','game.entities.void','game.entities.powerupspawner','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.outofbounds','game.entities.elevator','game.entities.crate','game.entities.crate').defines(function(){LevelDeviney={"entities":[{"type":"EntityPlayer","x":20,"y":178,"settings":{"name":"player"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntityPowerupspawner","x":120,"y":-4,"settings":{"name":"zombies","size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":3,"maxPool":40}},{"type":"EntitySpawner","x":120,"y":-28,"settings":{"name":"weapons","target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6","7":"door7","8":"door8"},"spawnEntity":"EntityDoor","maxPool":1,"delay":2}},{"type":"EntityVoid","x":160,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":32,"y":96,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":80,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":208,"y":96,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":208,"y":160,"settings":{"size":{"x":16,"y":32},"name":"door8"}},{"type":"EntityVoid","x":160,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":80,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":32,"y":160,"settings":{"size":{"x":16,"y":32},"name":"door7"}},{"type":"EntityVoid","x":112,"y":168,"settings":{"size":{"x":32,"y":48},"floor":1,"name":"floor1"}},{"type":"EntityVoid","x":112,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3"}},{"type":"EntityVoid","x":112,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":124,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":124,"y":220,"settings":{"name":"cord2","size":{"x":8,"y":8}}},{"type":"EntityOutofbounds","x":0,"y":252,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityElevator","x":112,"y":168,"settings":{"target":{"1":"floor3","2":"floor2","3":"floor1"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityCrate","x":54,"y":52},{"type":"EntityCrate","x":192,"y":52}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5],[5,8,8,8,8,8,8,7,7,8,8,8,8,8,8,5],[5,7,7,7,26,26,26,26,26,26,26,26,7,7,7,5],[5,19,22,20,8,8,8,8,8,8,8,8,19,22,20,5],[5,26,26,26,7,12,7,7,7,7,12,7,26,26,26,5],[5,8,8,8,19,24,20,7,7,19,24,20,8,8,8,5],[5,7,12,7,26,26,26,7,7,26,26,26,7,12,7,5],[5,19,24,20,8,8,8,7,7,8,8,8,19,24,20,5],[5,26,26,26,7,12,7,7,7,7,12,7,26,26,26,5],[5,8,8,8,19,24,20,7,7,19,24,20,8,8,8,5],[5,7,12,7,26,26,26,7,7,26,26,26,7,12,7,5],[5,19,24,20,8,8,8,7,7,8,8,8,19,24,20,5],[5,14,14,14,19,22,20,7,7,19,22,20,14,14,14,5],[5,30,30,30,14,14,14,7,7,14,14,14,30,30,30,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,23,23,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1]]}]};LevelDevineyResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/entities/door.js
ig.baked=true;ig.module('game.entities.door').requires('impact.entity','impact.sound').defines(function(){EntityDoor=ig.Entity.extend({animSheet:new ig.AnimationSheet('media/door.png',16,32),size:{x:16,y:32},maxVel:{x:0,y:0},friction:{x:0,y:0},type:ig.Entity.TYPE.NONE,checkAgainst:ig.Entity.TYPE.A,collides:ig.Entity.COLLIDES.NONE,zIndex:-1,locked:false,weapons:5,isClosing:false,isOpening:false,doorSFX:new ig.Sound('media/sounds/OpenDoor.*'),init:function(x,y,settings){this.parent(x,y,settings);this.addAnim('idle',1,[0],true);this.addAnim('open',.1,[0,1,2,3,2,1,0],true);this.addAnim('locked',1,[4],true);this.activate(this.locked);},check:function(other){if(this.locked||this.isClosing||this.isOpening)
return;if(other.atDoor&&(other.pos.x>(this.pos.x)))
other.atDoor(this);},receiveDamage:function(value){},open:function(target)
{this.isOpening=true;this.target=target;this.currentAnim=this.anims.open;this.currentAnim.rewind();this.doorSFX.play();},onOpen:function()
{this.isOpening=false;var wid=Math.floor(Math.random()*this.weapons)+1;this.target.equip(wid);},update:function(){this.parent();if(this.currentAnim==this.anims.open){if(this.currentAnim.loopCount){if(this.isClosing)
this.onClose();if(this.isOpening)
this.onOpen()}}},close:function()
{this.isClosing=true;this.currentAnim=this.anims.open;this.currentAnim.rewind();this.doorSFX.play();},onClose:function()
{this.isClosing=false;this.kill();},activate:function(value){if(!value)
{this.currentAnim=this.anims.idle;}else{this.currentAnim=this.anims.locked;}
this.locked=value;},kill:function()
{this.parent();this.spawner.removeItem();}});});

// lib/game/entities/levelexit.js
ig.baked=true;ig.module('game.entities.levelexit').requires('impact.entity','game.entities.door').defines(function(){EntityLevelexit=EntityDoor.extend({onOpen:function(){if(this.level){var levelName=this.level.replace(/^(Level)?(\w)(\w*)/,function(m,l,a,b){return a.toUpperCase()+b;});ig.game.currentLevelName=levelName;ig.game.loadLevelDeferred(ig.global['Level'+levelName]);}}});});

// lib/game/entities/text.js
ig.baked=true;ig.module('game.entities.text').requires('impact.entity','impact.font').defines(function(){EntityText=ig.Entity.extend({font:null,text:"undefined",alpha:1,alignment:ig.Font.ALIGN.LEFT,maxVel:{x:0,y:0},zIndex:-1,init:function(x,y,settings)
{this.parent(x,y,settings);var fileName="04b03-black";switch(settings.size)
{case("medium"):case("large"):fileName+="-"+settings.size;console.log(settings.size);break;default:fileName+="";}
this.font=new ig.Font('media/'+fileName+'.font.png');},update:function()
{this.parent()},draw:function()
{if(this.alpha!=1){ig.system.context.globalAlpha=this.alpha;}
this.parent();this.size={x:this.font.widthForString(this.text),y:8};this.font.draw(this.text,Math.round(this.pos.x)-this.offset.x-ig.game.screen.x,Math.round(this.pos.y)-this.offset.y-ig.game.screen.y,this.alignment);if(this.alpha!=1){ig.system.context.globalAlpha=1;}}});});

// lib/game/entities/doorlock.js
ig.baked=true;ig.module('game.entities.doorlock').requires('impact.entity').defines(function(){EntityDoorlock=ig.Entity.extend({_wmDrawBox:true,_wmBoxColor:'rgba(128, 28, 230, 0.7)',_wmScalable:true,size:{x:8,y:8},target:null,targets:[],init:function(x,y,settings){this.parent(x,y,settings);this.targets=ig.ksort(this.target);this.mySort(this.targets);if(typeof wm=="undefined")
{var totalLevels=this.targets.length;var storage=ig.game.storage;var level=storage.getInt("level");var totalScore=storage.getInt("totalScore");var nextLevel=level+1;var rewardsTotal=(nextLevel*(nextLevel+1))*1000;if(totalScore>=rewardsTotal)
{level++;storage.set("level",level);ig.game.tracking.trackEvent("levelup","game","level:"+level,null);if(nextLevel>totalLevels)
{level=nextLevel;ig.game.displayInstructions("All Doors Are Unlocked!");}
else
{ig.game.displayInstructions("A New Door Was Just Unlocked");}}
else
{ig.game.displayInstructions("Next Door Unlocked At "+rewardsTotal+" Points.");}
for(var i=0;i<totalLevels;i++)
{ig.game.getEntityByName(this.targets[i]).activate((i<level)?false:true);}}},mySort:function(arr)
{var regex=/door([0-9]+)/;function map(str){return Number(regex.exec(str)[1]);}
return arr.sort(function(a,b){var av=map(a),bv=map(b);return av<bv?-1:av>bv?1:0;})},update:function(){}});});

// lib/game/plugins/impact-storage.js
ig.baked=true;ig.module('game.plugins.impact-storage').requires('impact.game').defines(function(){ig.Storage=ig.Class.extend({staticInstantiate:function(i){return!ig.Storage.instance?null:ig.Storage.instance;},init:function(){ig.Storage.instance=this;},isCapable:function(){return!(typeof(window.localStorage)==='undefined');},isSet:function(key){return!(this.get(key)===null);},initUnset:function(key,value){if(this.get(key)===null)this.set(key,value);},get:function(key){if(!this.isCapable())return null;try{return JSON.parse(localStorage.getItem(key));}catch(e){return window.localStorage.getItem(key);}},getInt:function(key){return parseInt(this.get(key));},getFloat:function(key){return parseFloat(this.get(key));},getBool:function(key){return!!this.get(key);},key:function(n){return this.isCapable()?window.localStorage.key(n):null;},set:function(key,value){if(!this.isCapable())return null;try{window.localStorage.setItem(key,JSON.stringify(value));}catch(e){if(e==QUOTA_EXCEEDED_ERR)
console.log('localStorage quota exceeded');}},setHighest:function(key,value){if(value>this.getFloat(key))this.set(key,value);},remove:function(key){if(!this.isCapable())return null;window.localStorage.removeItem(key);},clear:function(){if(!this.isCapable())return null;window.localStorage.clear();}});});

// lib/game/entities/stats.js
ig.baked=true;ig.module('game.entities.stats').requires('impact.entity','game.plugins.impact-storage').defines(function(){EntityStats=ig.Entity.extend({_wmDrawBox:true,_wmBoxColor:'rgba(128, 28, 230, 0.7)',_wmScalable:true,size:{x:8,y:8},text:[],storage:null,statText:new ig.Font('media/04b03.font.png'),init:function(x,y,settings)
{this.parent(x,y,settings);if(typeof wm=="undefined")
{this.storage=new ig.Storage();}},update:function(){this.parent();if(typeof wm=="undefined")
{this.updateText();}},updateText:function(){var level=this.storage.getInt("level");var nextLevel=level+1;var totalScore=this.storage.getInt("totalScore");var rewardsTotal=(nextLevel*(nextLevel+1))*1000;var totalKills=this.storage.get("totalKills")
var totalDoors=this.storage.get("totalDoors")
this.text.length=0;this.text.push("Total -> Score: "+totalScore.toString().padString(7));this.text.push("Kills: "+totalKills.toString().padString(6));this.text.push("Doors: "+totalDoors.toString().padString(6));},draw:function(){this.parent();if(typeof wm=="undefined")
{ig.system.context.fillStyle='rgba(0,0,0,0.9)';ig.system.context.fillRect(0*ig.system.scale,0*ig.system.scale,ig.system.width*ig.system.scale,16*ig.system.scale);var nextX=5;var padding=7;var i=0;var nextText;var total=this.text.length;for(i=0;i<total;i++)
{nextText=this.text[i];this.statText.draw(nextText,nextX,5);nextX+=this.statText.widthForString(nextText)+padding;}}}});});

// lib/game/levels/dorms.js
ig.baked=true;ig.module('game.levels.dorms').requires('impact.image','game.entities.player','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.levelexit','game.entities.void','game.entities.void','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.outofbounds','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.text','game.entities.doorlock','game.entities.void','game.entities.stats').defines(function(){LevelDorms={"entities":[{"type":"EntityPlayer","x":20,"y":210,"settings":{"name":"player"}},{"type":"EntityLevelexit","x":32,"y":160,"settings":{"level":"degraff","name":"door3"}},{"type":"EntityLevelexit","x":80,"y":128,"settings":{"level":"kellum","name":"door5"}},{"type":"EntityLevelexit","x":32,"y":96,"settings":{"level":"landis","name":"door7"}},{"type":"EntityLevelexit","x":32,"y":32,"settings":{"level":"reynolds","name":"door11"}},{"type":"EntityLevelexit","x":208,"y":160,"settings":{"level":"cawthon","name":"door4"}},{"type":"EntityLevelexit","x":80,"y":64,"settings":{"level":"bryan","name":"door9"}},{"type":"EntityLevelexit","x":160,"y":64,"settings":{"level":"smith","name":"door10"}},{"type":"EntityLevelexit","x":208,"y":32,"settings":{"level":"gilchrist","name":"door12"}},{"type":"EntityLevelexit","x":208,"y":96,"settings":{"level":"dorman","name":"door8"}},{"type":"EntityLevelexit","x":160,"y":128,"settings":{"level":"salley","name":"door6"}},{"type":"EntityLevelexit","x":160,"y":192,"settings":{"level":"broward","name":"door2"}},{"type":"EntityLevelexit","x":80,"y":192,"settings":{"level":"deviney","name":"door1"}},{"type":"EntityVoid","x":112,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":112,"y":184,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityElevator","x":112,"y":184,"settings":{"target":{"1":"floor1","2":"floor2","3":"floor3"},"cord":{"1":"cordA","2":"cordB"}}},{"type":"EntityVoid","x":124,"y":12,"settings":{"name":"cordA"}},{"type":"EntityVoid","x":124,"y":240,"settings":{"size":{"x":8,"y":8},"name":"cordB"}},{"type":"EntityVoid","x":112,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3"}},{"type":"EntityOutofbounds","x":92,"y":264,"settings":{"size":{"x":76,"y":16}}},{"type":"EntityText","x":76,"y":120,"settings":{"text":"KELLUM"}},{"type":"EntityText","x":196,"y":24,"settings":{"text":"GILCHRIST"}},{"type":"EntityText","x":200,"y":88,"settings":{"text":"DORMAN"}},{"type":"EntityText","x":72,"y":184,"settings":{"text":"DEVINEY"}},{"type":"EntityText","x":28,"y":88,"settings":{"text":"LANDIS"}},{"type":"EntityText","x":156,"y":120,"settings":{"text":"SALLEY"}},{"type":"EntityText","x":20,"y":24,"settings":{"text":"REYONOLDS"}},{"type":"EntityText","x":24,"y":152,"settings":{"text":"DEGRAFF"}},{"type":"EntityText","x":76,"y":56,"settings":{"text":"BRYAN"}},{"type":"EntityText","x":156,"y":56,"settings":{"text":"SMITH"}},{"type":"EntityText","x":152,"y":184,"settings":{"text":"BROWARD"}},{"type":"EntityText","x":200,"y":152,"settings":{"text":"CAWTHON"}},{"type":"EntityDoorlock","x":124,"y":-24,"settings":{"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6","7":"door7","8":"door8","9":"door9","10":"door10","11":"door11","12":"door12"}}},{"type":"EntityVoid","x":0,"y":-24,"settings":{"name":"settings","showStats":"false","useWeapons":"false","cameraMinY":-16}},{"type":"EntityStats","x":52,"y":-24}],"layer":[{"name":"main","width":16,"height":15,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[3,5,5,5,5,5,5,5,5,5,6,5,5,5,6,3],[5,8,9,8,8,9,8,8,8,9,8,8,9,8,8,5],[5,7,12,7,7,7,7,7,7,7,7,7,7,12,7,5],[5,19,24,20,7,7,7,7,7,7,7,7,19,24,20,5],[5,26,26,26,7,12,7,7,7,7,12,7,26,26,26,6],[6,9,8,8,19,24,20,7,7,19,24,20,8,8,9,5],[5,7,12,7,26,26,26,7,7,26,26,26,7,12,7,5],[5,19,24,20,8,9,8,7,7,8,8,9,19,24,20,5],[6,26,26,26,7,12,7,7,7,7,12,7,26,26,26,6],[5,9,8,8,19,24,20,7,7,19,24,20,9,8,8,5],[6,7,12,7,26,26,26,7,7,26,26,26,7,12,7,5],[5,19,24,20,9,8,8,7,7,8,9,8,19,24,20,6],[6,26,26,26,7,12,7,7,7,7,12,7,26,26,26,5],[5,19,22,22,22,24,20,7,7,19,24,22,22,22,20,5],[4,14,14,14,14,14,14,7,7,14,14,14,14,14,14,4]]},{"name":"collision","width":16,"height":15,"linkWithCollision":false,"visible":1,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1]]}]};LevelDoormsResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/dorman.js
ig.baked=true;ig.module('game.levels.dorman').requires('impact.image','game.entities.player','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.outofbounds','game.entities.spawner').defines(function(){LevelDorman={"entities":[{"type":"EntityPlayer","x":24,"y":194,"settings":{"name":"player"}},{"type":"EntitySpawner","x":116,"y":-4,"settings":{"size":{"x":24,"y":12},"name":"zombies","spawnEntity":"EntityZombie","delay":3,"maxPool":40}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntityVoid","x":32,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":32,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":208,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":208,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":124,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":124,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":112,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":112,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityVoid","x":112,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3"}},{"type":"EntityElevator","x":112,"y":168,"settings":{"target":{"1":"floor1","2":"floor2","3":"floor3"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityOutofbounds","x":60,"y":248,"settings":{"size":{"x":160,"y":16}}},{"type":"EntitySpawner","x":120,"y":-32,"settings":{"name":"weapons","delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5"},"spawnEntity":"EntityDoor","maxPool":1}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5],[5,8,8,8,8,8,19,22,22,20,8,8,8,8,8,5],[5,7,7,7,7,7,26,26,26,26,7,7,7,7,7,5],[5,7,7,7,19,20,7,7,7,7,19,20,7,7,7,5],[5,7,12,7,26,26,7,7,7,7,26,26,7,12,7,5],[5,19,24,20,8,19,20,7,7,19,20,8,19,24,20,5],[5,26,26,26,7,26,26,7,7,26,26,7,26,26,26,5],[5,8,8,8,19,20,8,7,7,8,19,20,8,8,8,5],[5,7,7,7,26,26,7,7,7,7,26,26,7,7,7,5],[5,7,12,7,8,19,20,7,7,19,20,8,7,12,7,5],[5,19,24,20,7,26,26,7,7,26,26,7,19,24,20,5],[5,26,26,26,7,8,8,7,7,8,8,7,26,26,26,5],[5,19,22,22,22,22,20,7,7,19,22,22,22,22,20,5],[5,14,14,14,14,14,14,7,7,14,14,14,14,14,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,23,23,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,1,1,0,0,1,1,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1]]}]};LevelDormanResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/gilchrist.js
ig.baked=true;ig.module('game.levels.gilchrist').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator').defines(function(){LevelGilchrist={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":44,"y":244,"settings":{"size":{"x":172,"y":16}}},{"type":"EntityVoid","x":44,"y":12,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":44,"y":204,"settings":{"name":"cord2","size":{"x":8,"y":8}}},{"type":"EntityVoid","x":32,"y":40,"settings":{"size":{"x":32,"y":48},"name":"floor3"}},{"type":"EntityVoid","x":32,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityPowerupspawner","x":200,"y":-4,"settings":{"size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":4,"maxPool":40,"name":"zombie"}},{"type":"EntityElevator","x":32,"y":40,"settings":{"target":{"1":"floor3","2":"floor2a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":80,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":80,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":144,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":144,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":80,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":144,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntitySpawner","x":120,"y":-52,"settings":{"name":"door","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"}}},{"type":"EntityVoid","x":204,"y":92,"settings":{"name":"cord3"}},{"type":"EntityVoid","x":204,"y":224,"settings":{"name":"cord4"}},{"type":"EntityVoid","x":192,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityVoid","x":192,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityElevator","x":192,"y":168,"settings":{"target":{"1":"floor1","2":"floor2b"},"cord":{"1":"cord3","2":"cord4"}}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,5,5,5,5,5,7,7,5,5],[5,8,8,8,8,8,8,8,8,8,8,8,7,7,8,5],[5,7,7,7,7,7,7,7,7,7,7,18,19,20,7,5],[5,7,7,7,7,12,7,7,7,12,7,30,26,26,7,5],[5,20,7,7,7,24,22,22,22,24,22,22,22,22,20,5],[5,14,7,7,26,26,26,26,26,26,26,26,26,26,26,5],[5,8,7,7,8,8,8,8,8,8,8,8,8,8,8,5],[5,7,7,7,7,12,7,7,7,12,7,7,7,7,7,5],[5,20,7,7,7,24,22,22,22,24,22,20,7,7,19,5],[5,26,7,7,26,26,26,26,26,26,26,26,7,7,14,5],[5,8,7,7,8,8,8,8,8,8,8,8,7,7,8,5],[5,7,7,7,7,12,7,7,7,12,7,7,7,7,7,5],[5,19,22,22,22,24,22,22,22,24,22,20,7,7,19,5],[5,14,14,14,14,14,14,14,14,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1]]}]};LevelGilchristResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/kellum.js
ig.baked=true;ig.module('game.levels.kellum').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.void','game.entities.void').defines(function(){LevelKellum={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":0,"y":244,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityVoid","x":44,"y":12,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":44,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":32,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityVoid","x":32,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1a"}},{"type":"EntityPowerupspawner","x":120,"y":-4,"settings":{"size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":2,"maxPool":40,"name":"zombie"}},{"type":"EntityElevator","x":192,"y":40,"settings":{"target":{"1":"floor3b","2":"floor2b","3":"floor1b"},"cord":{"1":"cord3","2":"cord4"}}},{"type":"EntityVoid","x":80,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":80,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":160,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":160,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":80,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":160,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntitySpawner","x":120,"y":-40,"settings":{"name":"door","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"}}},{"type":"EntityVoid","x":32,"y":40,"settings":{"size":{"x":32,"y":48},"name":"floor3a"}},{"type":"EntityVoid","x":204,"y":12,"settings":{"name":"cord3"}},{"type":"EntityVoid","x":192,"y":40,"settings":{"size":{"x":32,"y":48},"name":"floor3b"}},{"type":"EntityVoid","x":192,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityElevator","x":32,"y":168,"settings":{"target":{"1":"floor1a","2":"floor2a","3":"floor3a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":192,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1b"}},{"type":"EntityVoid","x":204,"y":220,"settings":{"name":"cord4"}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5],[5,8,8,8,8,8,8,19,20,8,8,8,8,8,8,5],[5,7,7,7,7,7,7,26,26,7,7,7,7,7,7,5],[5,7,7,7,7,12,7,7,7,7,12,7,7,7,7,5],[5,20,7,7,19,24,20,7,7,19,24,20,7,7,19,5],[5,26,7,7,26,26,26,7,7,26,26,26,7,7,26,5],[5,7,7,7,7,7,7,19,20,7,7,7,7,7,7,5],[5,7,7,7,7,12,7,26,26,7,12,7,7,7,7,5],[5,20,7,7,19,24,20,7,7,19,24,20,7,7,19,5],[5,26,7,7,26,26,26,7,7,26,26,26,7,7,26,5],[5,7,7,7,7,7,7,19,20,7,7,7,7,7,7,5],[5,7,7,7,7,12,7,26,26,7,12,7,7,7,7,5],[5,20,7,7,19,24,22,21,21,22,24,20,7,7,19,5],[5,14,7,7,14,14,14,14,14,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,23,23,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1]]}]};LevelKellumResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/landis.js
ig.baked=true;ig.module('game.levels.landis').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.powerupspawner','game.entities.powerupspawner','game.entities.powerupspawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner','game.entities.void').defines(function(){LevelLandis={"entities":[{"type":"EntityPlayer","x":24,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":0,"y":248,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityPowerupspawner","x":36,"y":-4,"settings":{"size":{"x":24,"y":12},"spawnEntity":"EntityZombie","delay":5,"maxPool":20,"name":"zombie"}},{"type":"EntityPowerupspawner","x":116,"y":-4,"settings":{"size":{"x":24,"y":12},"spawnEntity":"EntityZombie","delay":2,"maxPool":20,"name":"zombie"}},{"type":"EntityPowerupspawner","x":196,"y":-4,"settings":{"size":{"x":24,"y":12},"spawnEntity":"EntityZombie","delay":5,"maxPool":20,"name":"zombie"}},{"type":"EntityVoid","x":32,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1a"}},{"type":"EntityVoid","x":112,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1b"}},{"type":"EntityVoid","x":192,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1c"}},{"type":"EntityVoid","x":32,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityVoid","x":112,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityVoid","x":192,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2c"}},{"type":"EntityElevator","x":112,"y":104,"settings":{"target":{"1":"floor2b","2":"floor1b"},"cord":{"1":"cord3","2":"cord4"}}},{"type":"EntityVoid","x":44,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":44,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":124,"y":44,"settings":{"name":"cord3"}},{"type":"EntityVoid","x":124,"y":220,"settings":{"name":"cord4"}},{"type":"EntityVoid","x":204,"y":44,"settings":{"name":"cord5"}},{"type":"EntityVoid","x":204,"y":220,"settings":{"name":"cord6"}},{"type":"EntityElevator","x":32,"y":168,"settings":{"target":{"1":"floor1a","2":"floor2a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityElevator","x":192,"y":168,"settings":{"target":{"1":"floor1c","2":"floor2c"},"cord":{"1":"cord5","2":"cord6"}}},{"type":"EntityVoid","x":80,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":160,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":80,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":160,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":80,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":160,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntitySpawner","x":120,"y":-36,"settings":{"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"},"name":"weapon","maxPool":1,"delay":2,"spawnEntity":"EntityDoor"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,7,7,5,5,5,7,7,5,5,5,7,7,5,5],[5,8,19,20,8,8,8,19,20,8,8,8,19,20,8,5],[5,7,26,26,7,7,7,26,26,7,7,7,26,26,7,5],[5,7,8,8,7,12,7,8,8,7,12,7,8,8,7,5],[5,20,7,7,19,24,20,7,7,19,24,20,7,7,19,5],[5,26,7,7,26,26,26,7,7,26,26,26,7,7,26,5],[5,8,7,7,8,8,8,7,7,8,8,8,7,7,8,5],[5,7,7,7,7,12,7,7,7,7,12,7,7,7,7,5],[5,20,7,7,19,24,20,7,7,19,24,20,7,7,19,5],[5,26,7,7,26,26,26,7,7,26,26,26,7,7,26,5],[5,8,7,7,8,8,8,7,7,8,8,8,7,7,8,5],[5,7,7,7,7,12,7,7,7,7,12,7,7,7,7,5],[5,20,7,7,19,24,20,7,7,19,24,20,7,7,19,5],[5,14,7,7,14,14,14,7,7,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,23,23,1,1,1,23,23,1,1,1,23,23,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,1,1,0,0,0,1,1,0,0,0,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1]]}]};LevelLandisResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/reynolds.js
ig.baked=true;ig.module('game.levels.reynolds').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner','game.entities.void').defines(function(){LevelReynolds={"entities":[{"type":"EntityPlayer","x":20,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":44,"y":244,"settings":{"size":{"x":172,"y":16}}},{"type":"EntityVoid","x":124,"y":60,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":124,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":112,"y":120,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":112,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityPowerupspawner","x":120,"y":-4,"settings":{"size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":2,"maxPool":40,"name":"zombie"}},{"type":"EntityElevator","x":112,"y":168,"settings":{"target":{"1":"floor1","2":"floor2","3":"floor3"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":48,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":160,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":80,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":192,"y":128,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":80,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":160,"y":64,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntitySpawner","x":120,"y":-28,"settings":{"name":"door","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"}}},{"type":"EntityVoid","x":112,"y":56,"settings":{"size":{"x":32,"y":48},"name":"floor3"}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,7,7,5,5,5,5,5,5,5],[5,8,8,8,8,8,8,7,7,8,8,8,8,8,8,5],[5,14,7,14,14,14,14,14,14,14,14,14,14,7,14,5],[5,30,7,30,8,8,8,8,8,8,8,8,30,7,30,5],[5,8,7,8,7,12,7,7,7,7,12,7,8,7,8,5],[5,7,7,7,19,24,20,7,7,19,24,20,7,7,7,5],[5,7,7,7,14,14,14,7,7,14,14,14,7,7,7,5],[5,7,7,7,8,8,8,7,7,8,8,8,7,7,7,5],[5,7,7,12,7,12,7,7,7,7,12,7,12,7,7,5],[5,19,22,24,7,24,20,7,7,19,24,22,24,22,20,5],[5,25,14,14,14,14,14,7,7,14,14,14,14,14,27,5],[5,7,8,8,8,8,30,7,7,30,8,8,8,8,7,5],[5,19,22,22,22,22,20,7,7,19,22,22,22,22,20,5],[5,14,14,14,14,14,14,7,7,14,14,14,14,14,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,23,23,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1],[1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,1,1,1,0,0,1,1,1,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1],[1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1]]}]};LevelReynoldsResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/salley.js
ig.baked=true;ig.module('game.levels.salley').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.spawner','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.elevator','game.entities.void','game.entities.elevator','game.entities.void').defines(function(){LevelSalley={"entities":[{"type":"EntityPlayer","x":24,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":0,"y":248,"settings":{"size":{"x":256,"y":16}}},{"type":"EntityVoid","x":96,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":144,"y":176,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":144,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":96,"y":112,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":96,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":144,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":192,"y":48,"settings":{"size":{"x":16,"y":32},"name":"door7"}},{"type":"EntityPowerupspawner","x":36,"y":-4,"settings":{"size":{"x":24,"y":12},"name":"zombies","maxPool":40,"delay":3,"spawnEntity":"EntityZombie"}},{"type":"EntitySpawner","x":124,"y":-28,"settings":{"name":"weapons","spawnEntity":"EntityDoor","delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6","7":"door7"},"maxPool":1}},{"type":"EntityVoid","x":44,"y":44,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":44,"y":220,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":204,"y":220,"settings":{"name":"cord4"}},{"type":"EntityVoid","x":204,"y":92,"settings":{"name":"cord3"}},{"type":"EntityVoid","x":32,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1a"}},{"type":"EntityVoid","x":32,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2a"}},{"type":"EntityVoid","x":192,"y":104,"settings":{"size":{"x":32,"y":48},"name":"floor2b"}},{"type":"EntityElevator","x":32,"y":104,"settings":{"target":{"1":"floor2a","2":"floor1a"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":192,"y":168,"settings":{"size":{"x":32,"y":48},"name":"floor1b"}},{"type":"EntityElevator","x":192,"y":168,"settings":{"target":{"1":"floor1b","2":"floor2b"},"cord":{"1":"cord3","2":"cord4"}}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,7,7,5,5,5,5,5,5,5,5,5,5,5,5],[5,19,22,20,8,8,8,8,8,8,8,8,8,8,8,5],[5,26,26,26,7,7,7,7,7,7,7,7,7,7,7,5],[5,8,8,8,7,7,12,7,7,12,7,7,12,7,7,5],[5,20,7,7,19,22,24,22,22,24,22,22,24,22,20,5],[5,26,7,7,26,26,26,26,26,26,26,26,26,26,26,5],[5,8,7,7,8,8,8,8,8,8,8,8,8,8,8,5],[5,7,7,7,7,7,12,7,7,12,7,7,7,7,7,5],[5,20,7,7,19,7,24,22,22,24,22,20,7,7,19,5],[5,26,7,7,26,26,26,26,26,26,26,26,7,7,26,5],[5,8,7,7,8,8,8,8,8,8,8,8,7,7,8,5],[5,7,7,7,7,7,12,7,7,12,7,7,7,7,7,5],[5,20,7,7,19,22,24,22,22,24,22,20,7,7,19,5],[5,14,7,7,14,14,14,14,14,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,1]]}]};LevelSalleyResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/levels/smith.js
ig.baked=true;ig.module('game.levels.smith').requires('impact.image','game.entities.player','game.entities.outofbounds','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.powerupspawner','game.entities.elevator','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.void','game.entities.spawner').defines(function(){LevelSmith={"entities":[{"type":"EntityPlayer","x":16,"y":194,"settings":{"name":"player"}},{"type":"EntityOutofbounds","x":160,"y":244,"settings":{"size":{"x":96,"y":16}}},{"type":"EntityVoid","x":28,"y":12,"settings":{"name":"cord1"}},{"type":"EntityVoid","x":28,"y":204,"settings":{"name":"cord2"}},{"type":"EntityVoid","x":16,"y":72,"settings":{"size":{"x":32,"y":48},"name":"floor2"}},{"type":"EntityVoid","x":16,"y":136,"settings":{"size":{"x":32,"y":48},"name":"floor1"}},{"type":"EntityPowerupspawner","x":184,"y":-4,"settings":{"size":{"x":16,"y":12},"spawnEntity":"EntityZombie","delay":2,"maxPool":40,"name":"zombie"}},{"type":"EntityElevator","x":16,"y":136,"settings":{"target":{"1":"floor1","2":"floor2"},"cord":{"1":"cord1","2":"cord2"}}},{"type":"EntityVoid","x":64,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door1"}},{"type":"EntityVoid","x":208,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door2"}},{"type":"EntityVoid","x":176,"y":144,"settings":{"size":{"x":16,"y":32},"name":"door3"}},{"type":"EntityVoid","x":64,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door4"}},{"type":"EntityVoid","x":176,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door5"}},{"type":"EntityVoid","x":208,"y":80,"settings":{"size":{"x":16,"y":32},"name":"door6"}},{"type":"EntityVoid","x":0,"y":-16,"settings":{"name":"settings"}},{"type":"EntitySpawner","x":124,"y":-40,"settings":{"name":"door","spawnEntity":"EntityDoor","maxPool":1,"delay":2,"target":{"1":"door1","2":"door2","3":"door3","4":"door4","5":"door5","6":"door6"}}}],"layer":[{"name":"main","width":16,"height":14,"linkWithCollision":false,"visible":1,"tilesetName":"media/dorm-tiles.png","repeat":false,"preRender":true,"distance":"1","tilesize":16,"foreground":false,"data":[[5,5,5,5,5,5,5,5,5,5,5,7,7,5,5,5],[5,8,8,8,8,8,8,8,8,8,8,7,7,8,8,5],[5,7,7,19,21,21,21,21,21,21,21,21,21,20,7,5],[5,7,7,26,26,26,26,26,26,26,26,26,26,26,7,5],[5,7,7,8,8,8,8,8,8,8,8,8,8,8,7,5],[5,7,7,7,12,7,7,7,7,7,7,12,7,12,7,5],[5,7,7,19,24,20,7,19,20,7,19,24,21,24,20,5],[5,7,7,26,26,26,7,26,26,7,26,26,26,26,26,5],[5,7,7,8,8,8,7,8,8,7,8,8,8,8,8,5],[5,7,7,7,12,7,26,7,7,26,7,12,7,12,7,5],[5,7,7,19,24,20,8,19,20,8,19,24,21,24,20,5],[5,7,7,26,26,26,7,26,26,7,26,26,26,26,26,5],[5,19,22,22,22,22,22,21,21,22,22,20,7,7,19,5],[5,14,14,14,14,14,14,26,26,14,14,14,7,7,14,5]]},{"name":"collision","width":16,"height":14,"linkWithCollision":false,"visible":0,"tilesetName":"","repeat":false,"preRender":false,"distance":1,"tilesize":16,"foreground":false,"data":[[1,1,1,1,1,1,1,1,1,1,1,23,23,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]}]};LevelSmithResources=[new ig.Image('media/dorm-tiles.png')];});

// lib/game/plugins/camera.js
ig.baked=true;ig.module('game.plugins.camera').defines(function(){Camera=ig.Class.extend({trap:{pos:{x:0,y:0},size:{x:16,y:16}},min:{x:0,y:0},max:{x:0,y:0},offset:{x:0,y:0},pos:{x:0,y:0},damping:5,lookAhead:{x:0,y:0},currentLookAhead:{x:0,y:0},debug:false,init:function(offsetX,offsetY,damping){this.offset.x=offsetX;this.offset.y=offsetY;this.damping=damping;},set:function(entity){this.pos.x=this.offset.x;this.pos.y=entity.pos.y-this.offset.y;this.trap.pos.x=entity.pos.x-this.trap.size.x/2;this.trap.pos.y=entity.pos.y-this.trap.size.y;},follow:function(entity){this.pos.y=this.move('y',entity.pos.y,entity.size.y);ig.game.screen.x=this.pos.x;ig.game.screen.y=this.pos.y;},move:function(axis,pos,size){var lookAhead=0;if(pos<this.trap.pos[axis]){this.trap.pos[axis]=pos;this.currentLookAhead[axis]=this.lookAhead[axis];}
else if(pos+size>this.trap.pos[axis]+this.trap.size[axis]){this.trap.pos[axis]=pos+size-this.trap.size[axis];this.currentLookAhead[axis]=-this.lookAhead[axis];}
return(this.pos[axis]-(this.pos[axis]-this.trap.pos[axis]+this.offset[axis]
+this.currentLookAhead[axis])*ig.system.tick*this.damping).limit(this.min[axis],this.max[axis]);},draw:function(){if(this.debug){ig.system.context.fillStyle='rgba(255,0,255,0.3)';ig.system.context.fillRect((this.trap.pos.x-this.pos.x)*ig.system.scale,(this.trap.pos.y-this.pos.y)*ig.system.scale,this.trap.size.x*ig.system.scale,this.trap.size.y*ig.system.scale);}}});});

// lib/game/entities/zombie.js
ig.baked=true;ig.module('game.entities.zombie').requires('impact.entity','impact.sound').defines(function(){EntityZombie=ig.Entity.extend({animSheet:new ig.AnimationSheet('media/zombie.png',16,16),size:{x:8,y:14},offset:{x:4,y:2},maxVel:{x:100,y:100},flip:false,friction:{x:150,y:0},speed:14,type:ig.Entity.TYPE.B,checkAgainst:ig.Entity.TYPE.A,collides:ig.Entity.COLLIDES.PASSIVE,spawner:null,ai:0,deathSFX:new ig.Sound('media/sounds/Death.*'),fallOutOfBoundsSFX:new ig.Sound('media/sounds/PlayerMonserFall.*'),hitSoftSFX:new ig.Sound('media/sounds/HitSoft.*'),init:function(x,y,settings){this.parent(x,y,settings);this.spawner=settings.spawner;this.setupAnimation(settings.spriteOffset?settings.spriteOffset:0);},setupAnimation:function(offset){offset=offset*8;this.addAnim('walk',.07,[0+offset,1+offset,2+offset,3+offset,4+offset,5+offset]);},update:function(){if(this.ai==EntityZombie.AI.PLATFORMER)
{if(!ig.game.collisionMap.getTile(this.pos.x+(this.flip?+4:this.size.x-4),this.pos.y+this.size.y+1)){this.flip=!this.flip;}}
var xdir=this.flip?-1:1;this.vel.x=this.speed*xdir;this.currentAnim.flip.x=this.flip;this.parent();},handleMovementTrace:function(res){this.parent(res);if(res.collision.x){this.flip=!this.flip;}},check:function(other){other.receiveDamage(10,this);},receiveDamage:function(value,from){this.parent(value,from);if(this.health>0)
{ig.game.spawnEntity(EntityDeathExplosion,this.pos.x,this.pos.y,{particles:2,colorOffset:1});this.hitSoftSFX.play();}
else
{ig.game.stats.kills++;}},kill:function(noAnimation){this.parent();if(!noAnimation)
{ig.game.spawnEntity(EntityDeathExplosion,this.pos.x,this.pos.y,{colorOffset:1});this.deathSFX.play();}
if(this.spawner)
this.spawner.removeItem();},outOfBounds:function()
{this.kill(true);if(this.spawner)
this.spawner.outOfBounds();this.fallOutOfBoundsSFX.play();},collideWith:function(other,axis){if(other.collides==ig.Entity.COLLIDES.FIXED&&this.touches(other)){var overlap;var size;if(axis=='y'){size=this.size.y;if(this.pos.y<other.pos.y)overlap=this.pos.y+this.size.y-other.pos.y;else overlap=this.pos.y-(other.pos.y+other.size.y);}else{size=this.size.x;if(this.pos.x<other.pos.x)overlap=this.pos.x+this.size.x-other.pos.x;else overlap=this.pos.x-(other.pos.x+other.size.x);}
overlap=Math.abs(overlap);if(overlap>3){this.kill();}}}});EntityZombie.AI={WONDERER:0,HUNTER:1,FOLLOWER:2,PLATFORMER:3,JUMPER:4};});

// lib/game/plugins/tracking.js
ig.baked=true;ig.module('game.plugins.tracking').defines(function(){Tracking=ig.Class.extend({debug:true,init:function(account){if(_gaq)
{_gaq.push(['_trackPageview']);if(account)
this.setAccount(account);}
else
{this.analyticsNotFound();}},setAccount:function(account){if(_gaq)
_gaq.push(['_setAccount',account]);else
this.analyticsNotFound();},trackPage:function(url){if(_gaq)
_gaq.push(['_trackPageview',url]);else
this.analyticsNotFound();},trackEvent:function(category,action,label,value){if(_gaq)
_gaq.push(['_trackEvent',category,action,label,value]);else
this.analyticsNotFound();},analyticsNotFound:function(){if(this.debug)console.log("Tracking object not found.");}});});

// lib/game/plugins/string-utils.js
ig.baked=true;ig.module('game.plugins.string-utils').defines(function(){String.prototype.padString=function(length){var str=this;while(str.length<length){str='0'+str;}
return str;}})

// lib/game/menus/menu.js
ig.baked=true;ig.module('game.menus.menu').requires('impact.entity','game.plugins.impact-storage').defines(function(){EntityPauseMenu=ig.Entity.extend({statText:new ig.Font('media/04b03.font.png'),init:function(x,y,settings){this.parent(x,y,settings);this.addKeyListeners();},addKeyListeners:function(){}})
EntityPauseMenu=EntityPauseMenu.extend({stats:null,ignorePause:true,title:"Pause",instructions:"Press Escape To Resume Or Q To Quit.",draw:function(){this.parent();ig.system.context.fillStyle='rgba(0,0,0,0.8)';ig.system.context.fillRect(0*ig.system.scale,0*ig.system.scale,ig.system.width*ig.system.scale,ig.system.height*ig.system.scale);var x=ig.system.width/2;var y=ig.system.height/2-40;this.statText.draw(this.title,x,y,ig.Font.ALIGN.CENTER);if(this.stats){this.statText.draw('Time: '+this.stats.time,x,y+30,ig.Font.ALIGN.CENTER);this.statText.draw('Kills: '+this.stats.kills.toString().padString(3),x,y+40,ig.Font.ALIGN.CENTER);this.statText.draw('Doors: '+this.stats.doors.toString().padString(3),x,y+50,ig.Font.ALIGN.CENTER);this.statText.draw('Score: '+this.stats.score.toString().padString(6),x,y+60,ig.Font.ALIGN.CENTER);}
this.statText.draw(this.instructions,x,ig.system.height-10,ig.Font.ALIGN.CENTER);}})
EntityGameOverMenu=EntityPauseMenu.extend({instructions:"Press Spacebar To Continue Or Q To Quit.",init:function(x,y,settings){this.parent(x,y,settings);this.title=ig.game.deathMessage;},addKeyListeners:function(){}})})

// lib/game/main.js
ig.baked=true;ig.module('game.main').requires('impact.game','game.levels.broward','game.levels.bryan','game.levels.cawthon','game.levels.degraff','game.levels.deviney','game.levels.dorms','game.levels.dorman','game.levels.gilchrist','game.levels.kellum','game.levels.landis','game.levels.reynolds','game.levels.salley','game.levels.smith','impact.font','game.plugins.camera','game.entities.door','game.entities.zombie','game.plugins.impact-storage','game.plugins.tracking','game.plugins.string-utils','impact.sound','game.menus.menu').defines(function(){MyGame=ig.Game.extend({gravity:360,statText:new ig.Font('media/04b03.font.png'),showStats:false,levelTimer:new ig.Timer(),levelExit:null,stats:null,lives:0,camera:null,player:null,lifeSprite:new ig.Image('media/life-sprite.png'),duration:1,strength:3,quakeTimer:null,quakeRunning:false,deathMessage:'You Died',sortBy:ig.Game.SORT.Z_INDEX,instructionsTimer:null,instructionDelay:2,instructionsText:"",isGameOver:false,activeMenu:null,buttonDelay:.3,buttonDelayTimer:null,useWeapons:true,playerStartPosition:{x:0,y:0},defaultInstructions:'',storage:null,currentLevelName:"dorms",levelCounter:0,tracking:null,init:function(){this.tracking=new Tracking(trackingID);this.storage=this.storage=new ig.Storage();this.quakeTimer=new ig.Timer();this.instructionsTimer=new ig.Timer();this.buttonDelayTimer=new ig.Timer();this.camera=new Camera((ig.system.width-224)*.5,ig.system.height/3,5);this.camera.trap.size.x=224*ig.system.scale;this.camera.trap.size.y=ig.system.height/3;this.camera.lookAhead.x=0;this.loadLevel(LevelDorms);ig.input.bind(ig.KEY.LEFT_ARROW,'left');ig.input.bind(ig.KEY.UP_ARROW,'up');ig.input.bind(ig.KEY.RIGHT_ARROW,'right');ig.input.bind(ig.KEY.X,'jump');ig.input.bind(ig.KEY.C,'shoot');ig.input.bind(ig.KEY.TAB,'switch');ig.input.bind(ig.KEY.SPACE,'continue');ig.input.bind(ig.KEY.Q,'quit');ig.input.bind(ig.KEY.ESC,'pause');ig.music.add('media/sounds/theme.*');ig.music.volume=0.5;ig.Sound.volume=0.5;},loadLevel:function(data){this.defaultInstructions="none";this.showStats=true;var defaultWeapon=1;this.currentLevel=data;console.log("Level data",data);var cameraMinY=this.showStats?-16:0;this.stats={time:0,kills:0,deaths:0,doors:0,ammo:0};this.parent(data);this.levelCounter++;this.tracking.trackPage("/game/load/level/"+this.currentLevelName);var settings=this.getEntityByName("settings");if(settings){if(settings.showStats)
this.showStats=settings.showStats=="true"?true:false;if(settings.defaultInstructions)
this.defaultInstructions=settings.defaultInstructions;if(settings.defaultWeapon)
defaultWeapon=settings.defaultWeapon;if(settings.cameraMinY)
cameraMinY=Number(settings.cameraMinY);}
else{}
this.player=this.getEntitiesByType(EntityPlayer)[0];this.playerStartPosition={x:this.player.pos.x,y:this.player.pos.y};if(this.showStats){this.player.makeInvincible();this.player.equip(defaultWeapon,true);}
this.levelTimer.reset();this.camera.max.x=this.collisionMap.width*this.collisionMap.tilesize-ig.system.width;this.camera.min.y=cameraMinY;this.camera.max.y=this.collisionMap.height*this.collisionMap.tilesize-ig.system.height;this.camera.set(this.player);if(this.defaultInstructions!="none")
this.displayInstructions(this.defaultInstructions,7);},update:function(){if(this.instructionsTimer.delta()>this.instructionDelay){this.showInstructionText=false;}
if(this.paused){for(var i=0;i<this.entities.length;i++){if(this.entities[i].ignorePause){this.entities[i].update();}}
if(ig.input.state('quit')){ig.system.setGame(StartScreen);}}
else{this.parent();this.camera.follow(this.player);var delta=this.quakeTimer.delta();if(delta<-0.1){this.quakeRunning=true;var s=this.strength*Math.pow(-delta/this.duration,2);if(s>0.5){ig.game.screen.x+=Math.random().map(0,1,-s,s);ig.game.screen.y+=Math.random().map(0,1,-s,s);}}
else
{this.quakeRunning=false;}
this.stats.score=(this.stats.kills*50)+(this.stats.doors*10);}
if(ig.input.state('pause')&&!this.isGameOver){if(this.buttonDelayTimer.delta()>this.buttonDelay){this.togglePause();if(this.paused){this.showInstructionText=false;this.stats.time=Math.round(this.levelTimer.delta());this.activeMenu=this.spawnEntity(EntityPauseMenu,30,10,this.showStats?{stats:this.stats}:null);}else{this.levelTimer.set(-this.stats.time);}
this.buttonDelayTimer.reset();}}
if(ig.input.state('continue')&&this.isGameOver){this.reloadLevel();}},togglePause:function(){this.paused=!this.paused;if(!this.paused&&this.activeMenu)
this.activeMenu.kill();},displayInstructions:function(value,delay){this.instructionDelay=delay?delay:2;this.instructionsText=value;this.showInstructionText=true;this.instructionsTimer.reset();},draw:function(){this.parent();this.camera.draw();if(this.showStats&&!this.isGameOver){ig.system.context.fillStyle='rgba(0,0,0,0.9)';ig.system.context.fillRect(0*ig.system.scale,0*ig.system.scale,ig.system.width*ig.system.scale,16*ig.system.scale);this.statText.draw("Ammo "+this.stats.ammo.toString().padString(2),5,5);this.statText.draw("Doors "+this.stats.doors.toString().padString(3),50,5);this.statText.draw("Kills "+this.stats.kills.toString().padString(3),105,5);this.statText.draw("Score "+this.stats.score.toString().padString(6),155,5);}
if(this.showInstructionText){ig.system.context.fillStyle='rgba(0,0,0,0.8)';ig.system.context.fillRect(0*ig.system.scale,(ig.system.height-16)*ig.system.scale,ig.system.width*ig.system.scale,ig.system.height*ig.system.scale);var x=ig.system.width/2,y=ig.system.height-10;this.statText.draw(this.instructionsText,x,y,ig.Font.ALIGN.CENTER);}},gameOver:function(){this.showInstructionText=false;this.isGameOver=true;this.stats.time=Math.round(this.levelTimer.delta());if(this.showStats){this.paused=true;this.activeMenu=this.spawnEntity(EntityGameOverMenu,30,10,this.showStats?{stats:this.stats}:null);this.storage.set("totalScore",this.storage.getInt("totalScore")+this.stats.score);this.storage.set("totalKills",this.storage.getInt("totalKills")+this.stats.kills);this.storage.set("totalDoors",this.storage.getInt("totalDoors")+this.stats.doors);this.tracking.trackPage("/game/over/level/"+this.currentLevelName);this.tracking.trackEvent("gameover","game","level:"+this.currentLevelName+",score:"+this.stats.score+",kills"+this.stats.kills+",doors"+this.stats.doors,null);}
else{this.respawnPlayer();}},reloadLevel:function(){this.isGameOver=false;if(this.paused)
this.togglePause();this.loadLevelDeferred(this.currentLevel);},respawnPlayer:function(){this.player=this.spawnEntity(EntityPlayer,this.playerStartPosition.x,this.playerStartPosition.y);},shakeScreen:function(){if(this.quakeRunning){return;}
this.quakeTimer.set(this.duration);},setDeathMessage:function(value){this.deathMessage=value;}});StartScreen=ig.Game.extend({instructText:new ig.Font('media/04b03.font.png'),background:new ig.Image('media/screen-bg.png'),mainCharacter:new ig.Image('media/screen-main-character.png'),title:new ig.Image('media/game-title.png'),storage:null,startSFX:new ig.Sound('media/sounds/StartGame.*'),tracking:null,init:function(){this.tracking=new Tracking(trackingID);this.storage=new ig.Storage();this.setupLocalStorage();this.tracking.trackPage("/game/new-game-screen");ig.input.bind(ig.KEY.SPACE,'start');},setupLocalStorage:function(){if(!this.storage.isSet("level")){this.storage.set("level",1);this.tracking.trackEvent("newgame","game","new-install-version:"+version,null);}
if(!this.storage.isSet("totalKills"))
this.storage.set("totalKills",0);if(!this.storage.isSet("totalDoors"))
this.storage.set("totalDoors",0);if(!this.storage.isSet("totalScore"))
this.storage.set("totalScore",0);if(!this.storage.isSet("version")){this.storage.set("version",version);}
else{var oldVer=this.storage.get("version");if(oldVer!=version)
this.tracking.trackEvent("upgrade","game",oldVer+"->"+version,null);}},resetLocalStorage:function(){this.storage.clear();},update:function(){if(ig.input.pressed('start')){this.startSFX.play();ig.system.setGame(MyGame);}
this.parent();},draw:function(){this.parent();this.background.draw(0,0);this.mainCharacter.draw(0,0);this.title.draw(ig.system.width-this.title.width,0);var x=ig.system.width/2,y=ig.system.height-10;this.instructText.draw('Press Spacebar To Start',x+40,y,ig.Font.ALIGN.CENTER);}});if(ig.ua.mobile){ig.Sound.enabled=false;}
ig.main('#canvas',StartScreen,60,240,160,3);var version="v0.6.0-beta";var trackingID="UA-18884514-9";});